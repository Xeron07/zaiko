{"version":3,"sources":["assets/img/SellFish.png","assets/img/react-logo.png","variables/charts.js","assets/img/anime3.png","views/pdf.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/FixedPlugin/FixedPlugin.js","views/expenses/singleExpense.js","views/storages/addStorage.js","views/storages/singleStorage.js","views/clients/singleClient.js","views/Dashboard.js","views/sells/Sell.js","views/purchases/Purchase.js","views/storages/Storage.js","views/clients/Client.js","views/expenses/Expense.js","views/transections/trans.js","views/loss/loss.js","views/dashboard/cost.js","views/report/report.js","routes.js","views/clients/addclient.js","layouts/Admin/Admin.js","components/Navbars/RTLNavbar.js","layouts/RTL/RTL.js","index.js"],"names":["module","exports","chart1_2_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","chartExample1","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","data3","options","chartExample2","chartExample3","hoverBackgroundColor","chartExample4","styles","StyleSheet","create","page","flexDirection","section","margin","flexGrow","pdfComponent","React","Component","constructor","props","super","componentDidMount","MyDocument","size","style","this","state","tst","render","height","width","AdminNavbar","updateColor","window","innerWidth","collapseOpen","setState","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","componentWillUnmount","removeEventListener","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","border","borderRadius","marginLeft","paddingBottom","history","back","textAlign","forward","aria-expanded","aria-label","data-target","data-toggle","id","Collapse","navbar","isOpen","Nav","InputGroup","UncontrolledDropdown","nav","Modal","modalClassName","toggle","Input","placeholder","data-dismiss","Footer","Date","getFullYear","target","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","src","imgSrc","alt","text","to","innerLink","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","rtlName","name","defaultProps","FixedPlugin","handleClick","classes","activateMode","body","add","data-color","handleBgClick","Button","block","outline","disabled","Expense","match","params","eid","toString","reloadFile","console","clear","loading","axios","method","url","then","log","status","err","date","timestamp","toUTCString","expenseData","handleChangeTab","d","expenseDataView","role","Row","Col","md","Card","CardHeader","CardTitle","tag","CardBody","FormGroup","htmlFor","value","defaultValue","price","onChange","event","val","details","CardFooter","updateInfo","showLoading","response","Swal","fire","title","msg","onClose","reload","catch","UserProfile","SaveData","product","amount","unitPrice","pid","fetch","json","p","unit_price","p_id","UpdateData","SingleClient","cid","reloadData","client","clientInfo","payment","partials","transections","clientInfoView","Form","fontSize","email","pn","address","city","zip","paymentView","paid","due","transectionsData","length","tdata","reverse","Table","m","time","getDate","monthName","getMonth","totalAmount","discount","alert","t_id","partialData","pdata","par_id","total","tableView","update","pay","1","2","3","4","5","6","7","8","9","10","11","12","marginRight","col1","marginBottom","boxSizing","col2","Dashboard","relaodData","isLoading","sellData","purchaseData","totalSelled","totalPurchased","profit","stockData","totalLoss","fishTypes","todayLoss","allTransections","sellInfo","recieved","purchaseInfo","stockInfo","totalFish","totalStock","i","sellDataUi","totalItems","cursor","selectedProducts","products","modalDemo","purchaseDataUi","toggleModalLarge","modalLarge","toggleModalDownload","modalDownload","pdfDownloader","fileName","now","blob","error","showProductList","maxHeight","overflow","quantity","s2ab","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","exportXCL","wb","XLXS","utils","book_new","Props","Title","toLocaleString","hour","minute","hour12","Subject","Author","CreatedDate","SheetNames","push","a","it","join","ws","aoa_to_sheet","Sheets","dataView","write","bookType","saveAs","Blob","exporPDF","fontWeight","marginTop","show","toggleModalDemo","lg","parseInt","ModalBody","ModalFooter","ModalHeader","background","productList","getSuggestions","trim","toLowerCase","escapedValue","replace","regex","RegExp","filter","lan","test","getSuggestionValue","suggestion","Sells","renderSuggestion","newValue","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","reloadProductData","storageData","calculateOnlyPrice","forEach","paymentData","onlyPrice","getTotalAmountWithExpense","calculateDue","handleProductChanges","suggestionValue","productData","remaining","old","index","expensePrice","handleQuantityChange","handlePaidChange","addProduct","updateProduct","removeProduct","filtered","addDelivery","delivery_charge","active","fee","changeUI","ui","handleNewClientCheckBox","clientUI","showView","check","Label","clientForm","addExpenseView","setBradeCumb","Breadcrumb","BreadcrumbItem","handleClientSug","oldClients","c","c_id","phoneNum","clientSuggestion","handleClientNum","number","post","submissionData","info","expense","e_id","inputProps","onSuggestionSelected","right","borderLeft","borderRight","borderTop","eve","Purchase","Storage","renderFunc","showNoData","showData","class","open","InputGroupAddon","addonType","InputGroupText","item","deleteProduct","showCancelButton","showCloseButton","showLoaderOnConfirm","r","Client","deleteClient","reloadType","expenseList","expenseType","deleteExpense","eType","typeTxt","addType","typeToDelete","deleteType","res","headers","sortable","filterable","reloadDatas","selectedData","dataList","str","t","selectedClient","clients","showClientData","Loss","loss","losses","lossAmount","productLoss","lossId","singleTracnsection","share","saving","bankCharge","dep","rent","utility","extra","cost","totalCost","trData","monthView","_id","month","year","tCost","navView","handleMonthCange","tLoss","sell","purchase","savingA","tProfit","tSells","tPurchase","mProfit","tShare","netprofit","savingAmount","monthlyUI","daily","days","component","Cost","Transection","Sell","addClient","Admin","getRoutes","exact","getBrandText","mainPanel","tables","querySelectorAll","componentDidUpdate","action","scrollTop","scrollingElement","SingleExpense","addStorage","singleStorage","singleClient","from","DropdownToggle","caret","DropdownMenu","NavLink","DropdownItem","require","divider","head","link","createElement","rel","appendChild","getElementById","RTLNavbar","hist","createBrowserHistory","ReactDOM","RTL"],"mappings":"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","file":"static/js/main.acf40491.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SellFish.933c4d3b.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.eb6be414.png\";","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ]\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample1 = {\n  data1: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n        }\n      ]\n    };\n  },\n  data3: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.js\n  chartExample2, // in src/views/Dashboard.js\n  chartExample3, // in src/views/Dashboard.js\n  chartExample4 // in src/views/Dashboard.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","/** @format */\n\nimport React from \"react\";\n\n// // reactstrap components\n// import {\n//   Breadcrumb,\n//   BreadcrumbItem,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   CardFooter,\n//   Button,\n//   CardTitle,\n//   Table,\n//   Row,\n//   Col,\n//   FormGroup,\n//   InputGroup,\n//   InputGroupAddon,\n//   InputGroupText,\n//   Input,\n//   Form,\n// } from \"reactstrap\";\n\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nclass pdfComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tst: {},\n    };\n  }\n\n  componentDidMount = () => {};\n\n  render() {\n    return (\n      <PDFViewer\n        style={{ height: \"100%\", width: \"100%\", position: \"absolute\" }}>\n        {this.MyDocument()}\n      </PDFViewer>\n    );\n  }\n\n  MyDocument = () => {\n    return (\n      <Document>\n        <Page size='A4' style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n        </Page>\n      </Document>\n    );\n  };\n}\n\nexport default pdfComponent;\n","/**\n * /*!\n *\n * =========================================================\n * Black Dashboard React v1.1.0\n * =========================================================\n *\n * Product Page: https://www.creative-tim.com/product/black-dashboard-react\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n *\n * Coded by Creative Tim\n *\n * =========================================================\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * @format\n */\n\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\",\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\",\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch,\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand='lg'>\n          <Container fluid>\n            <div className='navbar-wrapper'>\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened,\n                })}>\n                <button\n                  className='navbar-toggler'\n                  type='button'\n                  onClick={this.props.toggleSidebar}>\n                  <span className='navbar-toggler-bar bar1' />\n                  <span className='navbar-toggler-bar bar2' />\n                  <span className='navbar-toggler-bar bar3' />\n                </button>\n              </div>\n              <NavbarBrand href='#pablo' onClick={(e) => e.preventDefault()}>\n                {this.props.brandText}\n                <button\n                  style={{\n                    border: \"1px solid white\",\n                    backgroundColor: \"transparent\",\n                    borderRadius: \"5px\",\n                    marginLeft: \"5%\",\n                    paddingBottom: \"5px\",\n                  }}\n                  onClick={() => {\n                    window.history.back();\n                  }}>\n                  <i\n                    className='tim-icons icon-minimal-left'\n                    style={{ textAlign: \"center\", color: \"white\" }}\n                  />\n                </button>\n                &nbsp;\n                <button\n                  style={{\n                    border: \"1px solid white\",\n                    backgroundColor: \"transparent\",\n                    borderRadius: \"5px\",\n\n                    paddingBottom: \"5px\",\n                  }}\n                  onClick={() => {\n                    window.history.forward();\n                  }}>\n                  <i\n                    className='tim-icons icon-minimal-right'\n                    style={{ textAlign: \"center\", color: \"white\" }}\n                  />\n                </button>\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label='Toggle navigation'\n              className='navbar-toggler'\n              data-target='#navigation'\n              data-toggle='collapse'\n              id='navigation'\n              type='button'\n              onClick={this.toggleCollapse}>\n              <span className='navbar-toggler-bar navbar-kebab' />\n              <span className='navbar-toggler-bar navbar-kebab' />\n              <span className='navbar-toggler-bar navbar-kebab' />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className='ml-auto' navbar>\n                <InputGroup className='search-bar'>\n                  {/* <Button\n                    color='link'\n                    data-target='#searchModal'\n                    data-toggle='modal'\n                    id='search-button'\n                    onClick={this.toggleModalSearch}>\n                    <i className='tim-icons icon-zoom-split' />\n                    <span className='d-lg-none d-md-block'>Search</span>\n                  </Button> */}\n                </InputGroup>\n                {/* <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color='default'\n                    data-toggle='dropdown'\n                    nav>\n                    <div className='notification d-none d-lg-block d-xl-block' />\n                    <i className='tim-icons icon-sound-wave' />\n                    <p className='d-lg-none'>Notifications</p>\n                  </DropdownToggle>\n                  <DropdownMenu className='dropdown-navbar' right tag='ul'>\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>\n                        Mike John responded to your email\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>\n                        You have 5 more tasks\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>\n                        Your friend Michael is in town\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>\n                        Another notification\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>\n                        Another one\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown> */}\n                <UncontrolledDropdown nav>\n                  {/* <DropdownToggle\n                    caret\n                    color='default'\n                    data-toggle='dropdown'\n                    nav\n                    onClick={(e) => e.preventDefault()}>\n                    <div className='photo'>\n                      <img alt='...' src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className='caret d-none d-lg-block d-xl-block' />\n                    <p className='d-lg-none'>Log out</p>\n                  </DropdownToggle> */}\n                  {/* <DropdownMenu className='dropdown-navbar' right tag='ul'>\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag='li' />\n                    <NavLink tag='li'>\n                      <DropdownItem className='nav-item'>Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu> */}\n                </UncontrolledDropdown>\n                <li className='separator d-lg-none' />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName='modal-search'\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}>\n          <div className='modal-header'>\n            <Input id='inlineFormInputGroup' placeholder='SEARCH' type='text' />\n            <button\n              aria-label='Close'\n              className='close'\n              data-dismiss='modal'\n              type='button'\n              onClick={this.toggleModalSearch}>\n              <i className='tim-icons icon-simple-remove' />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          {/* <Nav>\n            <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\">Creative Tim</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/presentation?ref=bdr-user-archive-footer\">About Us</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/blog?ref=bdr-user-archive-footer\">Blog</NavLink>\n            </NavItem>\n          </Nav> */}\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a\n              href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\"\n              target=\"_blank\"\n            >\n              Md. Minhaz Uddin\n            </a>{\" \"}\n            \n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n            {/* <li\n              className=\"active-pro\"\n            >\n              <ReactstrapNavLink\n                href=\"https://www.creative-tim.com/product/black-dashboard-pro-react?ref=bdr-user-archive-sidebar-upgrade-pro\"\n              >\n                <i className=\"tim-icons icon-spaceship\" />\n                <p>Upgrade to PRO</p>\n              </ReactstrapNavLink>\n            </li> */}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\n// reactstrap components\nimport { Button } from \"reactstrap\";\n\nclass FixedPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: \"dropdown show-dropdown\"\n    };\n  }\n  handleClick = () => {\n    if (this.state.classes === \"dropdown show-dropdown\") {\n      this.setState({ classes: \"dropdown show-dropdown show\" });\n    } else {\n      this.setState({ classes: \"dropdown show-dropdown\" });\n    }\n  };\n  activateMode = mode => {\n    switch (mode) {\n      case \"light\":\n        document.body.classList.add(\"white-content\");\n        break;\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  };\n  render() {\n    return (\n      <div className=\"fixed-plugin\">\n        <div className={this.state.classes}>\n          <div onClick={this.handleClick}>\n            <i className=\"fa fa-cog fa-2x\" />\n          </div>\n          <ul className=\"dropdown-menu show\">\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n            <li className=\"adjustments-line\">\n              <div className=\"badge-colors text-center\">\n                <span\n                  className={\n                    this.props.bgColor === \"primary\"\n                      ? \"badge filter badge-primary active\"\n                      : \"badge filter badge-primary\"\n                  }\n                  data-color=\"primary\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"primary\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"blue\"\n                      ? \"badge filter badge-info active\"\n                      : \"badge filter badge-info\"\n                  }\n                  data-color=\"blue\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"blue\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"green\"\n                      ? \"badge filter badge-success active\"\n                      : \"badge filter badge-success\"\n                  }\n                  data-color=\"green\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"green\");\n                  }}\n                />{\" \"}\n              </div>\n            </li>\n            <li className=\"adjustments-line text-center color-change\">\n              <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n              <span\n                className=\"badge light-badge mr-2\"\n                onClick={() => this.activateMode(\"light\")}\n              />{\" \"}\n              <span\n                className=\"badge dark-badge ml-2\"\n                onClick={() => this.activateMode(\"dark\")}\n              />{\" \"}\n              <span className=\"color-label\">DARK MODE</span>{\" \"}\n            </li>\n            <li className=\"button-container\">\n              <Button\n                href=\"https://www.creative-tim.com/product/black-dashboard-react\"\n                color=\"primary\"\n                block\n                className=\"btn-round\"\n              >\n                Download Now\n              </Button>\n              <Button\n                color=\"default\"\n                block\n                className=\"btn-round\"\n                outline\n                href=\"https://demos.creative-tim.com/black-dashboard-react/#/documentation/tutorial\"\n              >\n                Documentation\n              </Button>\n            </li>\n            <li className=\"header-title\">Want more components?</li>\n            <li className=\"button-container\">\n              <Button\n                href=\"https://www.creative-tim.com/product/black-dashboard-pro-react\"\n                className=\"btn-round\"\n                disabled\n                block\n                color=\"danger\"\n              >\n                Get pro version\n              </Button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedPlugin;\n","/** @format */\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Button,\n  CardTitle,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\n\nclass Expense extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenseData: false,\n      date: \"\",\n      loading: true,\n      eid: \"0\",\n      data: {},\n    };\n  }\n\n  componentDidMount = () => {\n    const { id } = this.props.match.params;\n    this.state.eid = id.toString();\n    this.setState(this.state);\n\n    this.reloadFile();\n  };\n\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.someValue !== this.props.someValue) {\n  //     //Perform some operation\n  //     this.setState({ someState: someValue });\n  //     this.classMethod();\n  //   }\n  // }\n\n  reloadFile = () => {\n    console.clear();\n    this.state.loading = true;\n\n    axios({\n      method: \"post\",\n      url: `/api/expense/all/${this.state.eid}`,\n    }).then((data) => {\n      console.clear();\n      console.log(data.data);\n      if (data.status == 200 && !data.data.err) {\n        let d = new Date(data.data.data.timestamp);\n\n        //Fri May 29 2020 02:55:47\n        const date = d.toUTCString();\n        console.log(date);\n        this.setState({\n          data: { ...data.data.data },\n          date,\n          expenseData: true,\n          loading: false,\n        });\n      }\n\n      this.setState({ loading: false });\n    });\n  };\n  handleChangeTab = (d) => {\n    this.setState({ expenseData: d });\n  };\n\n  render() {\n    return (\n      <div className='content'>\n        {this.state.loading ? this.showLoading() : this.expenseDataView()}\n      </div>\n    );\n  }\n\n  expenseDataView = () => {\n    if (this.state.date == \"\") {\n      return (\n        <div className='alert alert-danger' role='alert'>\n          <h3 style={{ textAlign: \"center\" }}>No Data Found</h3>\n        </div>\n      );\n    }\n    return (\n      <Row>\n        <Col md='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Expense Data</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col className='pr-md-1' md='6'>\n                  <FormGroup>\n                    <label htmlFor='exampleSelect1'>Time</label>\n                    <Input\n                      type='text'\n                      style={{ color: \"#16a085\" }}\n                      value={this.state.date}\n                      defaultValue='0'\n                      disabled></Input>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col className='pr-md-1' md='6'>\n                  <FormGroup>\n                    <label htmlFor='exampleSelect1'>Amount</label>\n                    <Input\n                      type='number'\n                      name='price'\n                      value={this.state.data.price}\n                      defaultValue='0'\n                      onChange={(event) => {\n                        let val =\n                          event.target.value < 0 ? 0 : event.target.value;\n                        this.state.data.price = val;\n                        this.setState(this.state);\n                      }}></Input>\n                  </FormGroup>\n                </Col>\n              </Row>{\" \"}\n              <Row>\n                <Col className='pr-md-1' md='6'>\n                  <FormGroup>\n                    <label htmlFor='exampleSelect1'>Expense Details</label>\n                    <Input\n                      type='textarea'\n                      name='details'\n                      value={this.state.data.details}\n                      defaultValue='0'\n                      onChange={(event) => {\n                        let val = event.target.value;\n                        this.state.data.details = val;\n                        this.setState(this.state);\n                      }}></Input>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <Button\n                className='btn-fill'\n                color='primary'\n                type='button'\n                onClick={() => this.updateInfo()}>\n                Update\n              </Button>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  showLoading = () => {\n    return (\n      <div className='card bg-info text-white' style={{ margin: \"0 auto\" }}>\n        <div className='card-body' style={{ textAlign: \"center\" }}>\n          Loading.....&nbsp;&nbsp;\n          <div className='spinner-border spinner-border-sm text-light'>\n            <span className='sr-only'>Loading...</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  updateInfo = () => {\n    axios({\n      method: \"post\",\n      url: \"/api/expense/update\",\n      data: this.state.data,\n    })\n      .then(function (response) {\n        //handle success\n        if (response.status == 200) {\n          Swal.fire({\n            title: \"❇ 🎣\",\n            text: response.data.msg,\n            icon: response.data.type,\n            onClose: () => {\n              window.location.reload(false);\n            },\n          });\n          console.log(response.status);\n        }\n      })\n      .catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n  };\n}\n\nexport default Expense;\n","/**\n * /*!\n *\n * =========================================================\n * Black Dashboard React v1.1.0\n * =========================================================\n *\n * Product Page: https://www.creative-tim.com/product/black-dashboard-react\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n *\n * Coded by Creative Tim\n *\n * =========================================================\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * @format\n */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: {\n        name: \"\",\n        unitPrice: \"\",\n        amount: \"\",\n      },\n    };\n  }\n  render() {\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Col md='8'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Product Name</label>\n                        <Input\n                          placeholder='Product Name'\n                          type='text'\n                          value={this.state.product.name}\n                          onChange={(event) => {\n                            this.state.product.name = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Quantity</label>\n                        <Input\n                          placeholder='Quantity'\n                          value={this.state.product.amount}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.product.amount = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Unit Price</label>\n                        <Input\n                          placeholder='Enter Unit Price'\n                          value={this.state.product.unitPrice}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.product.unitPrice = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    className='btn-fill'\n                    color='primary'\n                    type='button'\n                    onClick={() => this.SaveData()}>\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n\n  SaveData = () => {\n    if (this.state.product.name == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid name\",\n        icon: \"warning\",\n      });\n    } else if (this.state.product.amount == null) {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid quantity number\",\n        icon: \"warning\",\n      });\n    } else if (this.state.product.unitPrice == null) {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid unit price\",\n        icon: \"warning\",\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/product/add\",\n        data: this.state.product,\n      }).then(function (response) {\n        //handle success\n        if (response.status == 200) {\n          Swal.fire({\n            title: \"🐬🐬\",\n            text: \"Product Added\",\n            icon: \"success\",\n            onClose: () => {\n              window.location.href = \"/admin/storage\";\n            },\n          });\n        }\n      });\n    }\n  };\n}\n\nexport default UserProfile;\n","/**\n * /*!\n *\n * =========================================================\n * Black Dashboard React v1.1.0\n * =========================================================\n *\n * Product Page: https://www.creative-tim.com/product/black-dashboard-react\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n *\n * Coded by Creative Tim\n *\n * =========================================================\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * @format\n */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: {\n        name: \"\",\n        unitPrice: \"\",\n        amount: \"\",\n      },\n      pid: \"\",\n    };\n  }\n  componentDidMount = () => {\n    const { id } = this.props.match.params;\n    this.state.pid = id.toString();\n    this.setState(this.state);\n\n    this.reloadFile();\n  };\n\n  reloadFile = () => {\n    fetch(`/api/product/single/${this.state.pid}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.clear();\n        console.log(data);\n        if (!data.err) {\n          data = data.data;\n          let p = {\n            name: data.name,\n            unitPrice: data.unit_price,\n            amount: data.amount,\n          };\n\n          this.setState({ product: p, pid: data.p_id });\n        }\n      });\n  };\n  render() {\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Col md='8'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Product Name</label>\n                        <Input\n                          placeholder='Product Name'\n                          type='text'\n                          value={this.state.product.name}\n                          onChange={(event) => {\n                            this.state.product.name = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Quantity</label>\n                        <Input\n                          placeholder='Quantity'\n                          value={this.state.product.amount}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.product.amount = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Unit Price</label>\n                        <Input\n                          placeholder='Enter Unit Price'\n                          value={this.state.product.unitPrice}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.product.unitPrice = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    className='btn-fill'\n                    color='primary'\n                    type='button'\n                    onClick={() => this.UpdateData()}>\n                    Update\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n\n  UpdateData = () => {\n    if (this.state.product.name == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid name\",\n        icon: \"warning\",\n      });\n    } else if (this.state.product.amount == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid quantity number\",\n        icon: \"warning\",\n      });\n    } else if (this.state.product.unitPrice == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid unit price\",\n        icon: \"warning\",\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/product/update\",\n        data: { product: this.state.product, pid: this.state.pid },\n      }).then((response) => {\n        //handle success\n        if (response.status == 200) {\n          Swal.fire({\n            title: \"🐬🐬\",\n            text: \"Updated Successfully\",\n            icon: \"success\",\n          }).then(() => {\n            this.reloadFile();\n          });\n        }\n      });\n    }\n  };\n}\n\nexport default UserProfile;\n","/** @format */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nclass SingleClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      client: {},\n      partials: [],\n      payment: {\n        amount: 0,\n        due: 0,\n        paid: 0,\n      },\n      transections: [],\n      cid: \"\",\n\n      update: {\n        due: \"\",\n        pay: \"\",\n        t_id: \"\",\n      },\n    };\n\n    this.monthName = {\n      1: \"Jan\",\n      2: \"Feb\",\n      3: \"Mar\",\n      4: \"Apr\",\n      5: \"May\",\n      6: \"Jun\",\n      7: \"Jul\",\n      8: \"Aug\",\n      9: \"Sep\",\n      10: \"Oct\",\n      11: \"Nov\",\n      12: \"Dec\",\n    };\n  }\n\n  componentDidMount = () => {\n    const { id } = this.props.match.params;\n    this.state.cid = id.toString();\n    console.clear();\n    console.log(this.state.cid);\n    this.setState(this.state);\n    this.reloadData();\n  };\n\n  reloadData = () => {\n    this.state.loading = true;\n\n    axios({\n      method: \"get\",\n      url: `/api/client/details/${this.state.cid}`,\n    }).then((data) => {\n      console.clear();\n      console.log(data.data);\n      if (data.status == 200) {\n        this.state.client = data.data.clientInfo;\n        this.state.payment = data.data.payment;\n        this.state.partials = data.data.partials;\n        this.state.transections = data.data.transections;\n        this.setState(this.state);\n      }\n\n      this.setState({ loading: false });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            {this.clientInfoView()}\n            {this.paymentView()}\n          </Row>\n          {this.tableView()}\n        </div>\n      </>\n    );\n  }\n\n  clientInfoView = () => {\n    if (this.state.cid == \"\") return;\n    return (\n      <Col md='8'>\n        <Card>\n          <CardHeader>\n            <h5 className='title'>Edit Profile</h5>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <fieldset\n                style={{\n                  border: \"1px solid \",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}>\n                <legend style={{ fontSize: \"medium\" }}>\n                  Client Information\n                </legend>\n                <Row>\n                  <Col className='pr-md-1' md='5'>\n                    <FormGroup>\n                      <label>Client Name</label>\n                      <Input\n                        placeholder='Enter Full Name'\n                        type='text'\n                        value={this.state.client.name}\n                        onChange={(event) => {\n                          this.state.client.name = event.target.value;\n                          this.setState(this.state);\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className='pl-md-1' md='5'>\n                    <FormGroup>\n                      <label htmlFor='exampleInputEmail1'>Email address</label>\n                      <Input\n                        placeholder='mike@email.com'\n                        type='email'\n                        value={this.state.client.email}\n                        onChange={(event) => {\n                          this.state.client.email = event.target.value;\n                          this.setState(this.state);\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className='pl-ml-1' md='10'>\n                    <FormGroup>\n                      <label htmlFor='exampleInputEmail1'>Phone Number</label>\n                      <Input\n                        placeholder='Enter Phone Number'\n                        value={this.state.client.pn}\n                        onChange={(event) => {\n                          this.state.client.pn = event.target.value;\n                          this.setState(this.state);\n                        }}\n                        type='text'\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col md='12'>\n                    <FormGroup>\n                      <label>Address</label>\n                      <Input\n                        placeholder='Home Address'\n                        type='text'\n                        value={this.state.client.address}\n                        onChange={(event) => {\n                          this.state.client.address = event.target.value;\n                          this.setState(this.state);\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col className='pr-md-1' md='4'>\n                    <FormGroup>\n                      <label>City</label>\n                      <Input\n                        placeholder='City'\n                        type='text'\n                        value={this.state.client.city}\n                        onChange={(event) => {\n                          this.state.client.city = event.target.value;\n                          this.setState(this.state);\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n\n                  <Col className='pl-md-1' md='4'>\n                    <FormGroup>\n                      <label>Postal Code</label>\n                      <Input\n                        placeholder='ZIP Code'\n                        type='number'\n                        value={this.state.client.zip}\n                        onChange={(event) => {\n                          this.state.client.zip = event.target.value;\n                          this.setState(this.state);\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </fieldset>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Button\n              className='btn-fill'\n              color='primary'\n              type='button'\n              onClick={() => this.SaveData()}>\n              Save\n            </Button>\n          </CardFooter>\n        </Card>\n      </Col>\n    );\n  };\n\n  paymentView = () => {\n    return (\n      <Col md='4'>\n        <Card>\n          <CardHeader>\n            <h5 className='title'>Payment Data</h5>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <Col className='pr-md-1' md='11'>\n                <FormGroup>\n                  <label>Total Amount</label>\n                  <Input\n                    placeholder='Amount'\n                    type='text'\n                    value={this.state.payment.amount}\n                    style={{ color: \"#16a085\" }}\n                    disabled\n                  />\n                </FormGroup>\n              </Col>\n              <Col className='pr-md-1' md='11'>\n                <FormGroup>\n                  <label>Total Paid</label>\n                  <Input\n                    placeholder='Paid'\n                    type='text'\n                    value={this.state.payment.paid}\n                    style={{ color: \"#27ae60\" }}\n                    disabled\n                  />\n                </FormGroup>\n              </Col>\n              <Col className='pr-md-1' md='11'>\n                <FormGroup>\n                  <label>Total Due</label>\n                  <Input\n                    placeholder='Due'\n                    type='text'\n                    value={this.state.payment.due}\n                    style={{ color: \"#c0392b\" }}\n                    disabled\n                  />\n                </FormGroup>\n              </Col>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  };\n\n  transectionsData = () => {\n    if (this.state.transections.length <= 0)\n      return <h3 style={{ textAlign: \"center\" }}>No Data Found</h3>;\n    const tdata = this.state.transections.reverse();\n    return (\n      <Table className='tablesorter' responsive>\n        <thead className='text-primary'>\n          <tr>\n            <th>Time</th>\n            <th>Type</th>\n            <th>Total</th>\n            <th>Paid</th>\n            <th>Discount</th>\n            <th>Details</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tdata.map((m) => {\n            let date = new Date(m.time);\n            return (\n              <tr>\n                <td>{`${date.getDate()}/${\n                  this.monthName[date.getMonth() + 1]\n                }/${date.getFullYear()}`}</td>\n                <td>{m.type}</td>\n                <td>{m.amount.totalAmount}</td>\n                <td>{m.payment.paid}</td>\n                <td>{m.payment.discount}</td>\n                <td>\n                  <button\n                    className='btn btn-danger'\n                    onClick={() => {\n                      alert(m.t_id);\n                    }}>\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  };\n\n  partialData = () => {\n    if (this.state.partials.length <= 0)\n      return <h3 style={{ textAlign: \"center\" }}>No Data Found</h3>;\n    const pdata = this.state.partials.reverse();\n    return (\n      <Table className='tablesorter' responsive>\n        <thead className='text-primary'>\n          <tr>\n            <th>#</th>\n            <th>Total</th>\n            <th>Paid</th>\n            <th>Due</th>\n            {/* <th>Show</th> */}\n          </tr>\n        </thead>\n        <tbody>\n          {pdata.map((m) => {\n            return (\n              <tr>\n                <td>{m.par_id}</td>\n                <td>{m.amount.total}</td>\n                <td>{m.amount.paid}</td>\n                <td>{m.amount.due}</td>\n                {/* <td>\n                  <button\n                    className='btn btn-danger'\n                    onClick={() => alert(m.t_id)}>\n                    Delete\n                  </button>\n                </td> */}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  };\n\n  tableView = () => {\n    return (\n      <Row>\n        <Col md='6'>\n          <Card>\n            <CardHeader>\n              <h5 className='title'>Transection History</h5>\n            </CardHeader>\n            <CardBody>{this.transectionsData()}</CardBody>\n          </Card>\n        </Col>\n\n        <Col md='6'>\n          <Card>\n            <CardHeader>\n              <h5 className='title'>Partial Payment</h5>\n            </CardHeader>\n            <CardBody>{this.partialData()}</CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  SaveData = () => {\n    if (this.state.client.name == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid name\",\n        icon: \"warning\",\n      });\n    } else if (this.state.client.email == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid email\",\n        icon: \"warning\",\n      });\n    } else if (this.state.client.pn == \"\" || this.state.client.pn.length < 11) {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid Phone Number\",\n        icon: \"warning\",\n      });\n    } else if (this.state.client.address == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid Address\",\n        icon: \"warning\",\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/client/update\",\n        data: this.state.client,\n      }).then((response) => {\n        console.clear();\n        console.log(response);\n        //handle success\n        if (response.status == 200) {\n          Swal.fire({\n            title: \"🐬🐬\",\n            text: \"Client Data Updated\",\n            icon: \"success\",\n          }).then(() => {\n            this.reloadData();\n          });\n        }\n      });\n    }\n  };\n  // popUp = () => {\n  //   const [show, setShow] = useState(false);\n\n  //   return (\n  //     <>\n  //       <Button variant='primary' onClick={() => setShow(true)}>\n  //         Custom Width Modal\n  //       </Button>\n\n  //       <Modal\n  //         show={show}\n  //         onHide={() => setShow(false)}\n  //         dialogClassName='modal-90w'\n  //         aria-labelledby='example-custom-modal-styling-title'>\n  //         <Modal.Header closeButton>\n  //           <Modal.Title id='example-custom-modal-styling-title'>\n  //             Custom Modal Styling\n  //           </Modal.Title>\n  //         </Modal.Header>\n  //         <Modal.Body>\n  //           <p>\n  //             Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae\n  //             unde commodi aspernatur enim, consectetur. Cumque deleniti\n  //             temporibus ipsam atque a dolores quisquam quisquam adipisci\n  //             possimus laboriosam. Quibusdam facilis doloribus debitis! Sit\n  //             quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem!\n  //             Mollitia reiciendis porro quo magni incidunt dolore amet atque\n  //             facilis ipsum deleniti rem!\n  //           </p>\n  //         </Modal.Body>\n  //       </Modal>\n  //     </>\n  //   );\n  // };\n}\n\nexport default SingleClient;\n","/**\n * /*!\n *\n * =========================================================\n * Black Dashboard React v1.1.0\n * =========================================================\n *\n * Product Page: https://www.creative-tim.com/product/black-dashboard-react\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n *\n * Coded by Creative Tim\n *\n * =========================================================\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * @format\n */\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Label,\n  FormGroup,\n  Input,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"variables/charts.js\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport XLXS from \"xlsx\";\n\nimport { saveAs } from \"@progress/kendo-file-saver\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  PDFDownloadLink,\n} from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 15,\n    marginRight: 0,\n    flexGrow: 1,\n    textAlign: \"left\",\n    width: \"10%\",\n  },\n  col1: {\n    padding: \"5px\",\n    fontSize: \"10px\",\n    width: \"100%\",\n    marginBottom: \"1px\",\n    boxSizing: \"content-box\",\n    height: \"20px\",\n    padding: \"5px\",\n    border: \"1px solid white\",\n    backgroundColor: \"#7f8c8d\",\n  },\n  col2: {\n    padding: \"5px\",\n    fontSize: \"10px\",\n    width: \"100%\",\n    marginBottom: \"1px\",\n    boxSizing: \"content-box\",\n    height: \"20px\",\n    padding: \"5px\",\n    border: \"1px solid white\",\n    backgroundColor: \"#bdc3c7\",\n  },\n});\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.monthName = {\n      1: \"Jan\",\n      2: \"Feb\",\n      3: \"Mar\",\n      4: \"Apr\",\n      5: \"May\",\n      6: \"Jun\",\n      7: \"Jul\",\n      8: \"Aug\",\n      9: \"Sep\",\n      10: \"Oct\",\n      11: \"Nov\",\n      12: \"Dec\",\n    };\n    this.state = {\n      modalLarge: false,\n      modalDownload: false,\n      sellData: {},\n      purchaseData: {},\n      totalSelled: [],\n      totalPurchased: [],\n      stockData: [],\n      selectedProducts: [],\n      transections: [],\n      profit: 0,\n      fishTypes: 0,\n      totalLoss: 0,\n      isLoading: true,\n      modalDemo: false,\n      todayLoss: [],\n      allTransections: [],\n      show: true,\n    };\n  }\n\n  toggleModalDemo() {\n    this.state.modalDemo = !this.state.modalDemo;\n    this.setState(this.state);\n  }\n\n  componentDidMount = () => {\n    this.relaodData();\n  };\n\n  relaodData = () => {\n    this.setState({ isLoading: true });\n    fetch(\"/api/operation/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.state.sellData = data.sellData;\n        this.state.purchaseData = data.purchaseData;\n        this.state.totalSelled = [...data.totalSelled];\n        this.state.totalPurchased = [...data.totalPurchased];\n        this.state.profit = data.profit;\n        this.state.stockData = [...data.stockData];\n        this.state.totalLoss = data.totalLoss;\n        this.state.fishTypes = data.fishTypes;\n        this.state.todayLoss = data.todayLoss;\n        this.setState(this.state);\n      });\n\n    fetch(\"/api/operation/daily/trans\")\n      .then((response) => response.json())\n      .then((data) => {\n        //console.log(data);\n        this.state.allTransections = [...data];\n        this.setState(this.state);\n      });\n\n    this.setState({ isLoading: false });\n  };\n\n  sellInfo = () => {\n    if (this.state.sellData == null) {\n      return <h3>🍎 No Sell</h3>;\n    } else {\n      return (\n        <div>\n          <h5>Total Amount : {this.state.sellData.totalAmount}</h5>\n          <h5>Recieved Today : {this.state.sellData.recieved}</h5>\n          <h5>Due Of Today : {this.state.sellData.due}</h5>\n        </div>\n      );\n    }\n  };\n\n  purchaseInfo = () => {\n    if (this.state.purchaseData == null) {\n      return <h5>🍏 No Purchase</h5>;\n    } else {\n      return (\n        <div className='ml-2'>\n          <h5>Total Amount : {this.state.purchaseData.totalAmount}</h5>\n          <h5>Paid Today : {this.state.purchaseData.paid}</h5>\n          <h5>Due Of Today : {this.state.purchaseData.due}</h5>\n        </div>\n      );\n    }\n  };\n\n  stockInfo = () => {\n    if (this.state.stockData.length <= 0) {\n      return <h3>🎣 No Stock Data</h3>;\n    } else {\n      let totalFish = 0;\n      let totalStock = 0;\n      //console.clear();\n      // console.log(this.state.stockData);\n      for (let i = 0; i < this.state.stockData.length; i++) {\n        totalFish += +this.state.stockData[i].totalFish;\n        totalStock += +this.state.stockData[i].totalStock;\n      }\n\n      return (\n        <div className='ml-2'>\n          <h5>\n            Total Fish Of Type(s) :&nbsp;\n            <i>\n              <b style={{ color: \"orange\" }}>{this.state.fishTypes}</b>\n            </i>{\" \"}\n          </h5>\n          <h5>\n            Total Fish :{\" \"}\n            <i>\n              <b style={{ color: \"yellow\" }}>{totalFish}</b>\n            </i>{\" \"}\n            Unit(s)\n          </h5>\n          <h5>\n            Total Amount:{\" \"}\n            <i>\n              <b style={{ color: \"green\" }}>{totalStock}</b>\n            </i>{\" \"}\n          </h5>\n          <h5>\n            Loss Amount:{\" \"}\n            <i>\n              <b style={{ color: \"#b33939\" }}>{this.state.totalLoss}</b>\n            </i>{\" \"}\n          </h5>\n        </div>\n      );\n    }\n  };\n\n  sellDataUi = () => {\n    if (this.state.totalSelled.length <= 0)\n      return <h3 style={{ textAlign: \"center\" }}>No Data Found</h3>;\n    const tdata = this.state.totalSelled.reverse();\n    return (\n      <Table className='tablesorter' responsive>\n        <thead className='text-primary'>\n          <tr>\n            <th>Time</th>\n            <th>Total</th>\n            <th>Items</th>\n            <th>Paid</th>\n\n            <th>Client</th>\n            <th>Expense</th>\n            <th>product</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tdata.map((m) => {\n            let date = new Date(m.time);\n            return (\n              <tr>\n                <td>{`${date.getDate()}/${\n                  this.monthName[date.getMonth() + 1]\n                }/${date.getFullYear()}`}</td>\n\n                <td>{m.amount.totalAmount}</td>\n                <td>{m.amount.totalItems}</td>\n                <td>{m.payment.paid}</td>\n\n                <td>\n                  <Link to={`/admin/client/${m.cid}`}>Client</Link>\n                </td>\n\n                <td>\n                  <Link\n                    to={`/admin/exp/${m.eid}`}\n                    style={\n                      m.eid == 0 ? { display: \"none\" } : { display: \"block\" }\n                    }>\n                    Expense\n                  </Link>\n                </td>\n                <td style={{ cursor: \"pointer\" }}>\n                  <a\n                    style={{ color: \"#7158e2\" }}\n                    onClick={() => {\n                      this.setState({\n                        selectedProducts: [...m.products],\n                        modalDemo: true,\n                      });\n                    }}>\n                    Products\n                  </a>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  };\n\n  purchaseDataUi = () => {\n    if (this.state.totalPurchased.length <= 0)\n      return <h3 style={{ textAlign: \"center\" }}>No Data Found</h3>;\n    const tdata = this.state.totalPurchased.reverse();\n    return (\n      <Table className='tablesorter' responsive>\n        <thead className='text-primary'>\n          <tr>\n            <th>Time</th>\n            <th>Total</th>\n            <th>Items</th>\n            <th>Paid</th>\n\n            <th>Client</th>\n            <th>Expense</th>\n            <th>product</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tdata.map((m) => {\n            let date = new Date(m.time);\n            return (\n              <tr>\n                <td>{`${date.getDate()}/${\n                  this.monthName[date.getMonth() + 1]\n                }/${date.getFullYear()}`}</td>\n\n                <td>{m.amount.totalAmount}</td>\n                <td>{m.amount.totalItems}</td>\n                <td>{m.payment.paid}</td>\n\n                <td>\n                  <Link to={`/admin/client/${m.cid}`}>Client</Link>\n                </td>\n\n                <td>\n                  <Link\n                    to={`/admin/exp/${m.eid}`}\n                    style={\n                      m.eid == 0 ? { display: \"none\" } : { display: \"block\" }\n                    }>\n                    Expense\n                  </Link>\n                </td>\n                <td style={{ cursor: \"pointer\" }}>\n                  <a\n                    style={{ color: \"#7158e2\" }}\n                    onClick={() => {\n                      this.setState({\n                        selectedProducts: [...m.products],\n                        modalDemo: true,\n                      });\n                    }}>\n                    Products\n                  </a>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Button\n              className='btn-fill'\n              color='primary'\n              type='button'\n              onClick={() => this.exportXCL()}>\n              Export Excel\n            </Button>\n            <Button\n              className='btn-fill'\n              color='primary'\n              type='button'\n              onClick={() => this.toggleModalLarge()}>\n              Generate PDF\n            </Button>\n          </Row>\n          <Row>\n            <Col lg='4'>\n              <Card className='card-chart'>\n                <CardHeader>\n                  <h5\n                    className='card-category'\n                    onClick={() => {\n                      this.setState({ show: !this.state.show });\n                    }}>\n                    Total Shipments (Today-\n                    {parseInt(this.state.totalSelled.length) +\n                      parseInt(this.state.totalPurchased.length)}\n                    )\n                  </h5>\n                  <CardTitle tag='h3'>\n                    <i\n                      className='tim-icons icon-bell-55 text-info'\n                      onClick={() => {\n                        this.setState({ show: !this.state.show });\n                      }}\n                    />\n                    <span\n                      style={\n                        this.state.show\n                          ? { display: \"inline-block\" }\n                          : { display: \"none\" }\n                      }>\n                      {this.state.profit}\n                    </span>\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <h5\n                    style={\n                      this.state.show\n                        ? { display: \"block\" }\n                        : { display: \"none\" }\n                    }>\n                    Profit- 💸 {this.state.profit}\n                  </h5>\n                  <h5>\n                    Total Sold:{\" \"}\n                    <i style={{ color: \"#16a085\" }}>\n                      {this.state.totalSelled.length}\n                    </i>\n                  </h5>\n                  <h5>\n                    Total Purchased:{\" \"}\n                    <i style={{ color: \"#16a085\" }}>\n                      {this.state.totalPurchased.length}\n                    </i>\n                  </h5>\n                  <h5>\n                    Total Loss:{\" \"}\n                    <i style={{ color: \"red\" }}>\n                      {this.state.todayLoss.length}\n                    </i>\n                  </h5>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg='4'>\n              <Card className='card-chart'>\n                <CardHeader>\n                  <h5 className='card-category'>Sells & Purchase</h5>\n                  <CardTitle tag='h3'>\n                    <i className='tim-icons icon-delivery-fast text-primary' />{\" \"}\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col className='pr-md-1' md='6'>\n                      <p>\n                        <b>\n                          <i>Sell</i>\n                        </b>\n                      </p>\n                      {this.sellInfo()}\n                    </Col>\n                    <Col className='pr-md-1' md='6'>\n                      <p>\n                        <b>\n                          <i>Purchase</i>\n                        </b>\n                      </p>\n                      {this.purchaseInfo()}\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg='4'>\n              <Card className='card-chart'>\n                <CardHeader>\n                  <h5 className='card-category'>Total Stock: </h5>\n                  <CardTitle tag='h3'>\n                    <i className='tim-icons icon-send text-success' /> 💰{\" \"}\n                    {this.state.stockData.totalStock}\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>{this.stockInfo()}</CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg='6' md='12'>\n              <Card className='card-tasks'>\n                <CardHeader>\n                  <h6 className='title d-inline'>\n                    Sells({this.state.totalSelled.length})\n                  </h6>\n                  <p className='card-category d-inline'> today</p>\n                </CardHeader>\n                <CardBody>{this.sellDataUi()}</CardBody>\n              </Card>\n            </Col>\n            <Col lg='6' md='12'>\n              <Card className='card-tasks'>\n                <CardHeader>\n                  <h6 className='title d-inline'>\n                    Purchases({this.state.totalPurchased.length})\n                  </h6>\n                  <p className='card-category d-inline'> today</p>\n                </CardHeader>\n                <CardBody>{this.purchaseDataUi()}</CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Modal\n            className='lg'\n            isOpen={this.state.modalDemo}\n            toggle={() => {\n              this.toggleModalDemo();\n            }}>\n            <div\n              className='modal-header'\n              style={{ backgroundColor: \"#3d3d3d\" }}>\n              <h5\n                className='modal-title'\n                id='exampleModalLabel'\n                style={{ color: \"white\" }}>\n                Products\n              </h5>\n              {/* <button\n                type='button'\n                className='close'\n                data-dismiss='modal'\n                aria-hidden='true'\n                onClick={() => {\n                  this.toggleModalDemo();\n                }}>\n                <i className='tim-icons icon-simple-remove' />\n              </button> */}\n            </div>\n            <ModalBody style={{ backgroundColor: \"#3d3d3d\" }}>\n              {this.showProductList()}\n            </ModalBody>\n            <ModalFooter style={{ backgroundColor: \"#3d3d3d\" }}>\n              <Button color='secondary' onClick={() => this.toggleModalDemo()}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n          <Modal\n            isOpen={this.state.modalLarge}\n            toggle={this.toggleModalLarge}\n            style={{ backgroundColor: \"transparent\" }}\n            size='lg'>\n            <ModalHeader\n              className='justify-content-center'\n              toggle={this.toggleModalLarge}>\n              PDF{\"  \"}\n              <i\n                className='tim-icons icon-cloud-download-93'\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                  this.toggleModalDownload();\n                }}></i>\n            </ModalHeader>\n            <ModalBody style={{ background: \"transparent\" }}>\n              <div\n                style={{\n                  height: \"100vh\",\n                  width: \"100%\",\n                  position: \"absolute\",\n                }}>\n                <PDFViewer\n                  style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                    position: \"absolute\",\n                  }}>\n                  {this.MyDocument()}\n                </PDFViewer>\n              </div>\n            </ModalBody>\n          </Modal>\n          <Modal\n            className='lg'\n            isOpen={this.state.modalDownload}\n            toggle={() => {\n              this.toggleModalDownload();\n            }}>\n            <ModalBody style={{ backgroundColor: \"#3d3d3d\" }}>\n              {this.pdfDownloader()}\n            </ModalBody>\n            <ModalFooter style={{ backgroundColor: \"#3d3d3d\" }}>\n              <Button\n                color='secondary'\n                onClick={() => this.toggleModalDownload()}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n\n  toggleModalLarge = () => {\n    this.setState({\n      modalLarge: !this.state.modalLarge,\n    });\n  };\n  toggleModalDownload = () => {\n    this.setState({\n      modalDownload: !this.state.modalDownload,\n    });\n  };\n  pdfDownloader = () => {\n    return (\n      <div>\n        <PDFDownloadLink\n          document={this.MyDocument()}\n          fileName={`DailyReport-${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()}_${Date.now()}.pdf`}>\n          {({ blob, url, loading, error }) =>\n            loading ? \"Loading document...\" : \"Download now!\"\n          }\n        </PDFDownloadLink>\n      </div>\n    );\n  };\n  showProductList = () => {\n    console.clear();\n    console.log(this.state.selectedProducts);\n    return (\n      <Table style={{ maxHeight: \"80%\", overflow: \"auto\" }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th className='text-left'>Unit Price</th>\n            <th className='text-left'>Quantity</th>\n            <th className='text-left'>Total price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.selectedProducts.map((p, i) => {\n            return (\n              <tr style={{ cursor: \"pointer\" }} map={p.p_id}>\n                <td>{p.name}</td>\n                <td className='text-center'>{p.unitPrice}</td>\n                <td className='text-center'>x{p.quantity}</td>\n                <td className='text-center'>{p.unitPrice * p.quantity}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  };\n\n  s2ab = (s) => {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff;\n    return buf;\n  };\n\n  exportXCL = () => {\n    if (this.state.allTransections.length > 0) {\n      let wb = XLXS.utils.book_new();\n      wb.Props = {\n        Title: `Transection of ${new Date().getDate()}/${new Date().getMonth()}/${new Date().getFullYear()} - T:${new Date().toLocaleString(\n          \"en-US\",\n          { hour: \"numeric\", minute: \"numeric\", hour12: true }\n        )}`,\n        Subject: \"Daily Transection\",\n        Author: \"SellFish Software\",\n        CreatedDate: new Date(),\n      };\n      wb.SheetNames.push(\"Clear Sheet\");\n      let a = [];\n      let data = [\n        [\n          \"#\",\n          \"ID\",\n          \"Time\",\n          \"Type\",\n          \"Products\",\n          \"Total Amount\",\n          \"Paid\",\n          \"Due\",\n          \"Discount\",\n          \"Client Name\",\n          \"Phone Number\",\n        ],\n      ];\n      let it = this.state.allTransections;\n      for (let i = 0; i < it.length; i++) {\n        a.push(i + 1);\n        a.push(it[i].t_id);\n        let time = new Date(it[i].time);\n        a.push(\n          `${time.getDate()}/${time.getMonth()}/${time.getFullYear()}: T- ${time.toLocaleString(\n            \"en-US\",\n            { hour: \"numeric\", minute: \"numeric\", hour12: true }\n          )}`\n        );\n        a.push(it[i].type);\n        a.push(it[i].products.map((e) => e.name).join(\",\"));\n        a.push(it[i].amount.totalAmount);\n        a.push(it[i].payment.paid);\n        a.push(it[i].payment.due);\n        a.push(it[i].amount.discount);\n        a.push(it[i].client[0].name);\n        a.push(it[i].client[0].pn);\n        data.push(a);\n        a = [];\n      }\n\n      let ws = XLXS.utils.aoa_to_sheet(data);\n      wb.Sheets[\"Clear Sheet\"] = ws;\n      let dataView = XLXS.write(wb, {\n        bookType: \"xlsx\",\n        type: \"binary\",\n      });\n      saveAs(\n        new Blob([this.s2ab(dataView)], {\n          type: \"application/octet-stream\",\n        }),\n        `DailyTransection${Date.now()}.xlsx`\n      );\n    } else {\n      alert(\"No Data to export\");\n    }\n  };\n\n  exporPDF = () => {};\n\n  MyDocument = () => {\n    let totalFish = 0;\n    let totalStock = 0;\n    //console.clear();\n    // console.log(this.state.stockData);\n    if (this.state.stockData.length > 0)\n      for (let i = 0; i < this.state.stockData.length; i++) {\n        totalFish += +this.state.stockData[i].totalFish;\n        totalStock += +this.state.stockData[i].totalStock;\n      }\n    return (\n      <Document>\n        <Page size='A4' style={styles.page}>\n          <View style={styles.section}>\n            <Text\n              style={{\n                fontSize: \"30px\",\n                padding: \"10px\",\n                marginBottom: \"10px\",\n              }}>\n              SellFish\n            </Text>\n            <Text\n              style={{\n                fontSize: \"10px\",\n                padding: \"5px\",\n                marginBottom: \"1px\",\n              }}>\n              Daily Report of : {new Date().getDate()}/{new Date().getMonth()}/\n              {new Date().getFullYear()}\n            </Text>\n            <Text\n              style={{\n                fontSize: \"10px\",\n                padding: \"5px\",\n                marginBottom: \"10px\",\n              }}>\n              Generated Time:{\" \"}\n              {new Date().toLocaleString(\"en-US\", {\n                hour: \"numeric\",\n                minute: \"numeric\",\n                hour12: true,\n              })}\n            </Text>\n            <Text style={{ backgroundColor: \"#227093\", color: \"white\" }}>\n              Daily Report\n            </Text>\n            <Text style={styles.col1}>Total Solds</Text>\n            <Text style={styles.col1}>Total Purchases</Text>\n            <Text style={styles.col1}>Total Losses</Text>\n            <Text style={styles.col1}>Sell Amount</Text>\n            <Text style={styles.col1}>Recieved Today</Text>\n            <Text style={styles.col1}>Due Of Today(Sell)</Text>\n            <Text style={styles.col1}>Purchase Amount</Text>\n            <Text style={styles.col1}>Paid Today</Text>\n            <Text style={styles.col1}>Due Of Today(Purchase)</Text>\n            <Text style={styles.col1}>Loss Of Today</Text>\n            <Text style={{ ...styles.col1, color: \"#3d3d3d\" }}>\n              Stock Available\n            </Text>\n            <Text style={{ ...styles.col1, color: \"#227093\" }}>\n              Stock Amount\n            </Text>\n            <Text\n              style={{ ...styles.col1, color: \"#474787\", fontWeight: \"bold\" }}>\n              Today's Profit\n            </Text>\n          </View>\n          <View\n            style={{\n              marginTop: 3,\n              marginRight: 15,\n              padding: 0,\n              flexGrow: 1,\n              textAlign: \"left\",\n            }}>\n            <Text\n              style={{\n                fontSize: \"30px\",\n                padding: \"10px\",\n                marginBottom: \"10px\",\n              }}>\n              {\" \"}\n            </Text>\n            <Text\n              style={{ fontSize: \"10px\", padding: \"5px\", marginBottom: \"1px\" }}>\n              {\" \"}\n            </Text>\n            <Text\n              style={{\n                fontSize: \"10px\",\n                padding: \"5px\",\n                marginBottom: \"10px\",\n              }}>\n              {\" \"}\n            </Text>\n            <Text style={{ fontSize: \"20px\", padding: \"5px\" }}> </Text>\n\n            <Text style={styles.col2}>{this.state.totalSelled.length}</Text>\n            <Text style={styles.col2}>{this.state.totalPurchased.length}</Text>\n            <Text style={styles.col2}>{this.state.todayLoss.length}</Text>\n            <Text style={styles.col2}>\n              {this.state.sellData == null\n                ? 0\n                : this.state.sellData.totalAmount}\n            </Text>\n            <Text style={styles.col2}>\n              {this.state.sellData == null ? 0 : this.state.sellData.recieved}\n            </Text>\n            <Text style={styles.col2}>\n              {this.state.sellData == null ? 0 : this.state.sellData.due}\n            </Text>\n            <Text style={styles.col2}>\n              {this.state.purchaseData == null\n                ? 0\n                : this.state.purchaseData.totalAmount}\n            </Text>\n            <Text style={styles.col2}>\n              {this.state.purchaseData == null\n                ? 0\n                : this.state.purchaseData.paid}\n            </Text>\n            <Text style={styles.col2}>\n              {this.state.purchaseData == null\n                ? 0\n                : this.state.purchaseData.due}\n            </Text>\n            <Text style={styles.col2}>{this.state.totalLoss}</Text>\n            <Text style={{ ...styles.col2, color: \"#3d3d3d\" }}>\n              {totalFish}\n            </Text>\n            <Text style={{ ...styles.col2, color: \"#227093\" }}>\n              {totalStock}\n            </Text>\n            <Text style={{ ...styles.col2, color: \"#474787\" }}>\n              {this.state.profit}\n            </Text>\n          </View>\n        </Page>\n      </Document>\n    );\n  };\n}\n\nexport default Dashboard;\n","/** @format */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport Autosuggest from \"react-autosuggest\";\nimport IsolatedScroll from \"react-isolated-scroll\";\nimport \"./theme.css\";\n// reactstrap components\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n  Table,\n  Label,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport axios from \"axios\";\n\n/**\n * Auto suggestion handler\n */\n\nlet productList = [];\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst escapeRegexCharacters = (str) => {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\nconst getSuggestions = (value) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === \"\") {\n    return [];\n  }\n\n  const regex = new RegExp(\"^\" + escapedValue, \"i\");\n\n  return productList.filter((lan) => regex.test(lan.name));\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = (suggestion) => suggestion.name;\n\nclass Sells extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      suggestions: [],\n      storageData: [],\n      clientUI: {\n        old: true,\n      },\n      cid: \"\",\n      ui: 0,\n\n      //data\n      delivery_charge: {\n        active: false,\n        fee: 20,\n      },\n      productData: {\n        p_id: 0,\n        quantity: 0,\n        remaining: 0,\n        unitPrice: 0,\n        total: 0,\n        name: \"\",\n        old: false,\n        index: -1,\n      },\n      products: [],\n      paymentData: {\n        totalAmount: 1000,\n        onlyPrice: 1000,\n        paid: \"\",\n        due: 0,\n        totalItems: 0,\n        discount: 0,\n      },\n      expensePrice: 0,\n      expenseData: {\n        price: \"\",\n        details: \"\",\n        e_id: null,\n      },\n      phoneNum: \"\",\n      clientInfo: {\n        pn: \"\", //phone number\n        email: \"\",\n        address: \"\",\n        city: \"Chittagong\",\n        zip: \"\",\n        name: \"\",\n      },\n      oldClients: [],\n    };\n  }\n\n  /**\n   * Autosuggession\n   */\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = (suggestion) => <span>{suggestion.name}</span>;\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  componentDidMount = () => {\n    this.reloadProductData();\n  };\n\n  reloadProductData = () => {\n    fetch(\"/api/product/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.err == \"no\") {\n          this.setState({ storageData: [...data.data] });\n          productList = [...data.data];\n        }\n      });\n  };\n\n  calculateOnlyPrice = () => {\n    let total = 0;\n    this.state.products.forEach(\n      (p) => (total = +total + +(p.unitPrice * p.quantity))\n    );\n    console.clear();\n    console.log(total);\n    this.state.paymentData.onlyPrice = total;\n    this.state.paymentData.totalAmount = this.getTotalAmountWithExpense();\n    this.state.paymentData.discount = 0;\n    this.setState(this.state);\n    this.calculateDue();\n  };\n\n  handleProductChanges = (event, val) => {\n    const data = val.suggestion;\n    this.state.value = val.suggestionValue;\n\n    this.state.productData.p_id = data.p_id;\n    this.state.productData.remaining = data.amount;\n    this.state.productData.unitPrice = data.unit_price;\n    this.state.productData.name = data.name;\n    this.state.productData.old = false;\n    this.state.productData.index = -1;\n    this.setState(this.state);\n    console.log(this.state.productData);\n  };\n\n  calculateDue = () => {\n    let paid = this.state.paymentData.paid;\n\n    this.state.paymentData.due =\n      this.state.paymentData.totalAmount - (paid ? paid : 0);\n\n    this.setState(this.state);\n  };\n\n  getTotalAmountWithExpense = () => {\n    return +this.state.paymentData.onlyPrice + +this.state.expensePrice;\n  };\n\n  handleQuantityChange = (event) => {\n    let val = event.target.value;\n    if (this.state.productData.remaining < val) {\n      alert(\"This amount of product not exist\");\n    } else {\n      this.state.productData.quantity = this.state.paymentData.quantity =\n        val == \"\" || val < 0 ? 0 : val;\n\n      this.setState(this.state);\n    }\n  };\n\n  handlePaidChange = (event) => {\n    let val = event.target.value;\n    this.state.paymentData.paid =\n      val > this.state.paymentData.amount || val < 0 ? 0 : val;\n    val > this.state.paymentData.amount &&\n      alert(\"Payment is more than total amount\");\n    this.setState(this.state);\n    this.calculateDue();\n  };\n\n  addProduct = () => {\n    if (this.state.productData.quantity <= 0) {\n      alert(\"No Quantity ?..\");\n      return;\n    }\n    if (!this.state.productData.old)\n      this.state.products.push({ ...this.state.productData });\n    else {\n      let index = this.state.productData.index;\n      this.state.products[index].quantity = this.state.productData.quantity;\n    }\n    console.clear();\n    console.log(this.state.productData);\n    console.log(this.state.products);\n    this.state.productData.p_id = 0;\n    this.state.productData.quantity = 0;\n    this.state.productData.remaining = 0;\n    this.state.productData.unitPrice = 0;\n    this.state.productData.old = false;\n    this.state.productData.index = -1;\n    this.state.value = \"\";\n    this.setState(this.state);\n    this.calculateOnlyPrice();\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: \"Type a fish name\",\n      value,\n      onChange: this.onChange,\n    };\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Col md='7'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Sell Form</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <fieldset\n                      style={{\n                        border: \"1px solid \",\n                        padding: \"10px\",\n                        borderRadius: \"5px\",\n                      }}>\n                      <legend style={{ fontSize: \"medium\" }}>\n                        Product Information\n                      </legend>\n                      <Row>\n                        <Col className='pr-md-1' md='10'>\n                          <Autosuggest\n                            suggestions={suggestions}\n                            onSuggestionsFetchRequested={\n                              this.onSuggestionsFetchRequested\n                            }\n                            onSuggestionsClearRequested={\n                              this.onSuggestionsClearRequested\n                            }\n                            getSuggestionValue={getSuggestionValue}\n                            renderSuggestion={this.renderSuggestion}\n                            inputProps={inputProps}\n                            onSuggestionSelected={this.handleProductChanges}\n                          />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col className='pr-md-1' md='3'>\n                          <FormGroup>\n                            <label>Quantity(kg)</label>\n                            <Input\n                              placeholder=''\n                              type='number'\n                              value={this.state.productData.quantity}\n                              onChange={this.handleQuantityChange}\n                            />\n                          </FormGroup>\n                        </Col>\n\n                        <Col className='pr-md-1' md='3'>\n                          <FormGroup>\n                            <label>Available(kg)</label>\n                            <Input\n                              style={{ color: \"#f19066\" }}\n                              placeholder='Not Selected'\n                              type='number'\n                              value={this.state.productData.remaining}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n\n                        <Col className='pr-md-1' md='3'>\n                          <FormGroup>\n                            <label>Unit Price(kg)</label>\n                            <Input\n                              style={{ color: \"#f19066\" }}\n                              placeholder='Not Selected'\n                              type='number'\n                              value={this.state.productData.unitPrice}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n\n                        <Col className='pr-md-1' md='3'>\n                          <br />\n                          <Button\n                            className='btn-fill'\n                            onClick={() => this.addProduct()}\n                            color='primary'\n                            type='button'>\n                            Add\n                          </Button>\n                        </Col>\n                      </Row>\n                    </fieldset>\n                    <br />\n\n                    <Row>\n                      <Col md='12'>\n                        <Card>\n                          <CardHeader>{this.setBradeCumb()}</CardHeader>\n                          <CardBody>{this.showView()}</CardBody>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    className='btn-fill'\n                    onClick={() => this.submissionData()}\n                    color='primary'\n                    type='submit'>\n                    Procced\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md='5'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Transection</h5>\n                </CardHeader>\n                <CardBody>\n                  <h6>\n                    Total Item(s):\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.products.length}\n                    </span>\n                  </h6>\n                  <hr />\n\n                  <h6>\n                    Total Price(s):\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.paymentData.onlyPrice}\n                    </span>\n                  </h6>\n\n                  <h6>\n                    Total Price(with expense)(s):\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.paymentData.totalAmount}\n                    </span>\n                  </h6>\n                  <hr />\n                  <Row>\n                    <Col className='pr-md-1' md='9'>\n                      <h6>Discount:</h6>\n                    </Col>\n                    <Col className='pr-md-1' md='3'>\n                      <input\n                        style={{\n                          color: \"#f19066\",\n                          width: \"100%\",\n                          borderLeft: \"0px\",\n                          borderRight: \"0px\",\n                          borderTop: \"0px\",\n                          backgroundColor: \"transparent\",\n                          textAlign: \"center\",\n                        }}\n                        placeholder='Not Selected'\n                        type='number'\n                        value={this.state.paymentData.discount}\n                        onChange={(event) => {\n                          this.state.paymentData.discount = event.target.value\n                            ? event.target.value\n                            : 0;\n                          if (\n                            this.state.paymentData.discount >\n                            this.state.paymentData.onlyPrice * 0.8\n                          ) {\n                            this.state.paymentData.discount = 0;\n                            alert(\"You can't give discount more than 80%\");\n                          }\n                          this.state.paymentData.totalAmount =\n                            this.getTotalAmountWithExpense() -\n                            this.state.paymentData.discount;\n                          this.setState(this.state);\n                          this.calculateDue();\n                        }}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col className='pr-md-1' md='9'>\n                      <h6> Total Paid:</h6>\n                    </Col>\n                    <Col className='pr-md-1' md='3'>\n                      <input\n                        style={{\n                          color: \"#f19066\",\n                          width: \"100%\",\n                          borderLeft: \"0px\",\n                          borderRight: \"0px\",\n                          borderTop: \"0px\",\n                          backgroundColor: \"transparent\",\n                          textAlign: \"center\",\n                        }}\n                        placeholder='Not Paid'\n                        type='number'\n                        value={this.state.paymentData.paid}\n                        onChange={(eve) => {\n                          let val = eve.target.value;\n                          if (val > this.state.paymentData.totalAmount) {\n                            alert(\n                              \"Please, give a valid pay amount.\\n(Paument is more than total amount)\"\n                            );\n                            val = \"\";\n                          }\n                          this.state.paymentData.paid = val ? val : \"\";\n                          this.state.paymentData.due =\n                            this.state.paymentData.totalAmount -\n                            (val ? val : 0);\n                          this.setState(this.state);\n                        }}\n                      />\n                    </Col>\n                  </Row>\n\n                  <hr />\n\n                  <h6>\n                    Total Due:\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.paymentData.due}\n                    </span>\n                  </h6>\n                </CardBody>\n              </Card>\n              <Card style={{ height: \"50%\" }}>\n                <Table style={{ maxHeight: \"80%\", overflow: \"auto\" }}>\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th className='text-left'>Unit Price</th>\n                      <th className='text-left'>Quantity</th>\n                      <th className='text-left'>Total price</th>\n                      <th className='text-left'>\n                        <i\n                          style={{ color: \"#ff5252\" }}\n                          className='tim-icons icon-trash-simple'></i>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.products.map((p, i) => {\n                      return (\n                        <tr style={{ cursor: \"pointer\" }} map={p.p_id}>\n                          <td\n                            onClick={() => {\n                              this.updateProduct(p, i);\n                            }}>\n                            {p.name}\n                          </td>\n                          <td\n                            onClick={() => {\n                              this.updateProduct(p, i);\n                            }}\n                            className='text-center'>\n                            {p.unitPrice}\n                          </td>\n                          <td className='text-center'>x{p.quantity}</td>\n                          <td className='text-center'>\n                            {p.unitPrice * p.quantity}\n                          </td>\n                          <td\n                            className='text-center'\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => {\n                              this.removeProduct(p.p_id);\n                            }}>\n                            <i\n                              style={{ color: \"#ff5252\" }}\n                              className='tim-icons icon-trash-simple'></i>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n\n  updateProduct = (p, i) => {\n    this.state.productData.p_id = p.p_id;\n    this.state.productData.quantity = p.quantity;\n    this.state.productData.remaining = p.remaining;\n    this.state.productData.unitPrice = p.unitPrice;\n    this.state.productData.old = true;\n    this.state.productData.index = i;\n    this.state.value = p.name;\n    this.setState(this.state);\n  };\n\n  removeProduct = (id) => {\n    const filtered = this.state.products.filter((p) => p.p_id != id);\n    this.state.products = [...filtered];\n    this.calculateOnlyPrice();\n  };\n\n  addDelivery = (event) => {\n    this.state.delivery_charge.active = !this.state.delivery_charge.active;\n    this.state.expensePrice += this.state.delivery_charge.active\n      ? this.state.delivery_charge.fee\n      : -this.state.delivery_charge.fee;\n    this.state.paymentData.amount =\n      this.getTotalAmountWithExpense() - this.state.paymentData.discount;\n    this.setState(this.state);\n    this.calculateDue();\n  };\n\n  changeUI = (d) => {\n    this.setState({ ui: d });\n  };\n\n  handleNewClientCheckBox = (event) => {\n    let data = this.state.clientUI;\n    data.old = !this.state.clientUI.old;\n    console.log(!event.target.value);\n    this.setState({ clientUI: data });\n  };\n\n  showView = () => {\n    if (this.state.ui == 0) {\n      return (\n        <div>\n          <FormGroup check>\n            <Label check>\n              <Input\n                type='checkbox'\n                value={!this.state.clientUI.old}\n                onChange={this.handleNewClientCheckBox}\n              />{\" \"}\n              New Client\n              <span className='form-check-sign'>\n                <span className='check'></span>\n              </span>\n            </Label>\n          </FormGroup>\n          <br />\n          {this.clientForm()}\n        </div>\n      );\n    } else if (this.state.ui == 1) {\n      return this.addExpenseView();\n    }\n  };\n  setBradeCumb = () => {\n    if (this.state.ui == 0) {\n      return (\n        <Breadcrumb>\n          <BreadcrumbItem active onClick={() => this.changeUI(0)}>\n            Client\n          </BreadcrumbItem>\n          <BreadcrumbItem onClick={() => this.changeUI(1)}>\n            <a href='#'>Add Expense</a>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      );\n    } else {\n      return (\n        <Breadcrumb>\n          <BreadcrumbItem active onClick={() => this.changeUI(0)}>\n            <a href='#'>Client</a>\n          </BreadcrumbItem>\n          <BreadcrumbItem onClick={() => this.changeUI(1)}>\n            Add Expense\n          </BreadcrumbItem>\n        </Breadcrumb>\n      );\n    }\n  };\n  handleClientSug = (id) => {\n    let client = this.state.oldClients.filter((c) => c.c_id == id);\n    client = client[0];\n    this.state.phoneNum = client.pn;\n    this.state.clientInfo = { ...this.state.clientInfo, ...client };\n    this.state.oldClients = [];\n    this.state.cid = id;\n    this.setState(this.state);\n  };\n  clientSuggestion = () => {\n    if (this.state.oldClients.length == 0) return;\n    return (\n      <div\n        style={{\n          padding: \"5px\",\n          maxHeight: \"7%\",\n          overflow: \"auto\",\n          backgroundColor: \"#3d3d3d\",\n        }}\n        key={Date.now()}>\n        {this.state.oldClients.map((c) => {\n          return (\n            <span\n              key={c.c_id}\n              style={{ color: \"#7efff5\" }}\n              onClick={() => this.handleClientSug(c.c_id)}>\n              {c.name}- {c.pn}\n            </span>\n          );\n        })}\n      </div>\n    );\n  };\n  clientForm = () => {\n    if (this.state.clientUI.old) {\n      return (\n        <div>\n          <Input\n            placeholder='Enter phone number only'\n            type='number'\n            value={this.state.phoneNum}\n            onChange={this.handleClientNum}\n          />\n\n          {this.clientSuggestion()}\n        </div>\n      );\n    } else {\n      return (\n        <Form>\n          <fieldset\n            style={{\n              border: \"1px solid \",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n            }}>\n            <legend style={{ fontSize: \"medium\" }}>Client Information</legend>\n            <Row>\n              <Col className='pr-md-1' md='5'>\n                <FormGroup>\n                  <label>Client Name</label>\n                  <Input\n                    placeholder='Enter Full Name'\n                    type='text'\n                    value={this.state.clientInfo.name}\n                    onChange={(event) => {\n                      this.state.clientInfo.name = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col className='pl-md-1' md='5'>\n                <FormGroup>\n                  <label htmlFor='exampleInputEmail1'>Email address</label>\n                  <Input\n                    placeholder='mike@email.com'\n                    type='email'\n                    value={this.state.clientInfo.email}\n                    onChange={(event) => {\n                      this.state.clientInfo.email = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col className='pl-ml-1' md='10'>\n                <FormGroup>\n                  <label htmlFor='exampleInputEmail1'>Phone Number</label>\n                  <Input\n                    placeholder='Enter Phone Number'\n                    value={this.state.clientInfo.pn}\n                    onChange={(event) => {\n                      this.state.clientInfo.pn = event.target.value;\n                      this.setState(this.state);\n                    }}\n                    type='text'\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col md='12'>\n                <FormGroup>\n                  <label>Address</label>\n                  <Input\n                    placeholder='Home Address'\n                    type='text'\n                    value={this.state.clientInfo.address}\n                    onChange={(event) => {\n                      this.state.clientInfo.address = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col className='pr-md-1' md='4'>\n                <FormGroup>\n                  <label>City</label>\n                  <Input\n                    placeholder='City'\n                    type='text'\n                    value={this.state.clientInfo.city}\n                    onChange={(event) => {\n                      this.state.clientInfo.city = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col className='pl-md-1' md='4'>\n                <FormGroup>\n                  <label>Postal Code</label>\n                  <Input\n                    placeholder='ZIP Code'\n                    type='number'\n                    value={this.state.clientInfo.zip}\n                    onChange={(event) => {\n                      this.state.clientInfo.zip = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </fieldset>\n        </Form>\n      );\n    }\n  };\n  handleClientNum = (event) => {\n    let number = event.target.value;\n    axios.post(`/api/client/get/${number}`).then((data) => {\n      this.setState({ oldClients: data.data.data });\n      console.log(data);\n    });\n    this.setState({ phoneNum: number });\n  };\n  addExpenseView = () => {\n    return (\n      <Row>\n        <Col className='pr-md-1' md='12'>\n          <Card>\n            <CardBody>\n              <Form>\n                <fieldset\n                  style={{\n                    border: \"1px solid \",\n                    padding: \"10px\",\n                    borderRadius: \"5px\",\n                  }}>\n                  <legend style={{ fontSize: \"medium\" }}>\n                    Expense information\n                  </legend>\n                  <Row>\n                    <Col md='11'>\n                      <FormGroup>\n                        <label>Amount</label>\n                        <Input\n                          placeholder='paid'\n                          type='number'\n                          value={this.state.expenseData.price}\n                          onChange={(event) => {\n                            this.state.expenseData.price = event.target.value;\n                            this.state.expensePrice = event.target.value\n                              ? event.target.value\n                              : 0;\n                            this.setState(this.state);\n                            this.calculateOnlyPrice();\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='11'>\n                      <FormGroup>\n                        <label htmlFor='exampleInputEmail1'>Details</label>\n                        <Input\n                          placeholder='Write details about expense'\n                          type='textarea'\n                          value={this.state.expenseData.details}\n                          onChange={(event) => {\n                            this.state.expenseData.details = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </fieldset>\n              </Form>\n            </CardBody>\n            {/* <CardFooter>\n              <Button className='btn-fill' color='primary' type='submit'>\n                Save\n              </Button>\n            </CardFooter> */}\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  //client\n  submissionData = () => {\n    if (this.state.products.length <= 0) {\n      Swal.fire(\"Oops!!\", \"No product(s) added \", \"warning\");\n    } else if (\n      this.state.clientInfo.name == \"\" ||\n      this.state.clientInfo.pn == \"\"\n    ) {\n      Swal.fire(\"Oops!!\", \"No Client Added\", \"warning\");\n    } else if (\n      this.state.expenseData.price == \"\" ||\n      this.state.expenseData.details == \"\"\n    ) {\n      Swal.fire(\"Oops!!\", 'No Expense or put \"0\" in expense', \"warning\");\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/sell/add\",\n        data: {\n          client: {\n            old: this.state.clientUI.old,\n            info: this.state.clientInfo,\n            cid: this.state.cid,\n          },\n          expense: this.state.expenseData,\n          payment: this.state.paymentData,\n          products: this.state.products,\n        },\n      })\n        .then(function (response) {\n          //handle success\n          if (response.status == 200) {\n            Swal.fire({\n              title: \"Good Job!!\",\n              text: \"Operation Success \",\n              icon: \"success\",\n              onClose: () => {\n                window.location.reload(false);\n              },\n            });\n            console.log(response.status);\n          }\n        })\n        .catch(function (response) {\n          //handle error\n          console.log(response);\n        });\n    }\n  };\n}\n\nexport default Sells;\n","/** @format */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport Autosuggest from \"react-autosuggest\";\nimport IsolatedScroll from \"react-isolated-scroll\";\nimport \"./theme.css\";\n// reactstrap components\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n  Table,\n  Label,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport axios from \"axios\";\n\n/**\n * Auto suggestion handler\n */\n\nlet productList = [];\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst escapeRegexCharacters = (str) => {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\nconst getSuggestions = (value) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === \"\") {\n    return [];\n  }\n\n  const regex = new RegExp(\"^\" + escapedValue, \"i\");\n\n  return productList.filter((lan) => regex.test(lan.name));\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = (suggestion) => suggestion.name;\n\nclass Purchase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      suggestions: [],\n      storageData: [],\n      clientUI: {\n        old: true,\n      },\n      cid: \"\",\n      ui: 0,\n\n      //data\n      delivery_charge: {\n        active: false,\n        fee: 20,\n      },\n      productData: {\n        p_id: 0,\n        quantity: 0,\n        remaining: 0,\n        unitPrice: 0,\n        total: 0,\n        name: \"\",\n        old: false,\n        index: -1,\n      },\n      products: [],\n      paymentData: {\n        totalAmount: 1000,\n        onlyPrice: 1000,\n        paid: \"\",\n        due: 0,\n        totalItems: 0,\n        discount: 0,\n      },\n      expensePrice: 0,\n      expenseData: {\n        price: \"\",\n        details: \"\",\n        e_id: null,\n      },\n      phoneNum: \"\",\n      clientInfo: {\n        pn: \"\", //phone number\n        email: \"\",\n        address: \"\",\n        city: \"Chittagong\",\n        zip: \"\",\n        name: \"\",\n      },\n      oldClients: [],\n    };\n  }\n\n  /**\n   * Autosuggession\n   */\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = (suggestion) => <span>{suggestion.name}</span>;\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  componentDidMount = () => {\n    this.reloadProductData();\n  };\n\n  reloadProductData = () => {\n    fetch(\"/api/product/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.err == \"no\") {\n          this.setState({ storageData: [...data.data] });\n          productList = [...data.data];\n        }\n      });\n  };\n\n  calculateOnlyPrice = () => {\n    let total = 0;\n    this.state.products.forEach(\n      (p) => (total = +total + +(p.unitPrice * p.quantity))\n    );\n    console.clear();\n    console.log(total);\n    this.state.paymentData.onlyPrice = total;\n    this.state.paymentData.totalAmount = this.getTotalAmountWithExpense();\n    this.state.paymentData.discount = 0;\n    this.setState(this.state);\n    this.calculateDue();\n  };\n\n  handleProductChanges = (event, val) => {\n    const data = val.suggestion;\n    this.state.value = val.suggestionValue;\n\n    this.state.productData.p_id = data.p_id;\n    this.state.productData.remaining = data.amount;\n    this.state.productData.unitPrice = data.unit_price;\n    this.state.productData.name = data.name;\n    this.state.productData.old = false;\n    this.state.productData.index = -1;\n    this.setState(this.state);\n    console.log(this.state.productData);\n  };\n\n  calculateDue = () => {\n    let paid = this.state.paymentData.paid;\n\n    this.state.paymentData.due =\n      this.state.paymentData.totalAmount - (paid ? paid : 0);\n\n    this.setState(this.state);\n  };\n\n  getTotalAmountWithExpense = () => {\n    return +this.state.paymentData.onlyPrice + +this.state.expensePrice;\n  };\n\n  handleQuantityChange = (event) => {\n    let val = event.target.value;\n\n    this.state.productData.quantity = this.state.paymentData.quantity =\n      val == \"\" || val < 0 ? 0 : val;\n\n    this.setState(this.state);\n  };\n\n  handlePaidChange = (event) => {\n    let val = event.target.value;\n    this.state.paymentData.paid =\n      val > this.state.paymentData.amount || val < 0 ? 0 : val;\n    val > this.state.paymentData.amount &&\n      alert(\"Payment is more than total amount\");\n    this.setState(this.state);\n    this.calculateDue();\n  };\n\n  addProduct = () => {\n    if (this.state.productData.quantity <= 0) {\n      alert(\"No Quantity ?..\");\n      return;\n    }\n    if (!this.state.productData.old)\n      this.state.products.push({ ...this.state.productData });\n    else {\n      let index = this.state.productData.index;\n      this.state.products[index].quantity = this.state.productData.quantity;\n    }\n    console.clear();\n    console.log(this.state.productData);\n    console.log(this.state.products);\n    this.state.productData.p_id = 0;\n    this.state.productData.quantity = 0;\n    this.state.productData.remaining = 0;\n    this.state.productData.unitPrice = 0;\n    this.state.productData.old = false;\n    this.state.productData.index = -1;\n    this.state.value = \"\";\n    this.setState(this.state);\n    this.calculateOnlyPrice();\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: \"Type a fish name\",\n      value,\n      onChange: this.onChange,\n    };\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Col md='7'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Purchase Form</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <fieldset\n                      style={{\n                        border: \"1px solid \",\n                        padding: \"10px\",\n                        borderRadius: \"5px\",\n                      }}>\n                      <legend style={{ fontSize: \"medium\" }}>\n                        Product Information\n                      </legend>\n                      <Row>\n                        <Col className='pr-md-1' md='10'>\n                          <Autosuggest\n                            suggestions={suggestions}\n                            onSuggestionsFetchRequested={\n                              this.onSuggestionsFetchRequested\n                            }\n                            onSuggestionsClearRequested={\n                              this.onSuggestionsClearRequested\n                            }\n                            getSuggestionValue={getSuggestionValue}\n                            renderSuggestion={this.renderSuggestion}\n                            inputProps={inputProps}\n                            onSuggestionSelected={this.handleProductChanges}\n                          />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col className='pr-md-1' md='3'>\n                          <FormGroup>\n                            <label>Quantity(kg)</label>\n                            <Input\n                              placeholder=''\n                              type='number'\n                              value={this.state.productData.quantity}\n                              onChange={this.handleQuantityChange}\n                            />\n                          </FormGroup>\n                        </Col>\n\n                        <Col className='pr-md-1' md='3'>\n                          <FormGroup>\n                            <label>Available(kg)</label>\n                            <Input\n                              style={{ color: \"#f19066\" }}\n                              placeholder='Not Selected'\n                              type='number'\n                              value={this.state.productData.remaining}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n\n                        <Col className='pr-md-1' md='3'>\n                          <FormGroup>\n                            <label>Unit Price(kg)</label>\n                            <Input\n                              style={{ color: \"#f19066\" }}\n                              placeholder='Not Selected'\n                              type='number'\n                              value={this.state.productData.unitPrice}\n                              onChange={(event) => {\n                                let val = event.target.value;\n                                this.state.productData.unitPrice = val;\n                                this.setState(this.state);\n                              }}\n                            />\n                          </FormGroup>\n                        </Col>\n\n                        <Col className='pr-md-1' md='3'>\n                          <br />\n                          <Button\n                            className='btn-fill'\n                            onClick={() => this.addProduct()}\n                            color='primary'\n                            type='button'>\n                            Add\n                          </Button>\n                        </Col>\n                      </Row>\n                    </fieldset>\n                    <br />\n\n                    <Row>\n                      <Col md='12'>\n                        <Card>\n                          <CardHeader>{this.setBradeCumb()}</CardHeader>\n                          <CardBody>{this.showView()}</CardBody>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    className='btn-fill'\n                    onClick={() => this.submissionData()}\n                    color='primary'\n                    type='submit'>\n                    Procced\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md='5'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Transection</h5>\n                </CardHeader>\n                <CardBody>\n                  <h6>\n                    Total Item(s):\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.products.length}\n                    </span>\n                  </h6>\n                  <hr />\n\n                  <h6>\n                    Total Price(s):\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.paymentData.onlyPrice}\n                    </span>\n                  </h6>\n\n                  <h6>\n                    Total Price(with expense)(s):\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.paymentData.totalAmount}\n                    </span>\n                  </h6>\n                  <hr />\n                  <Row>\n                    <Col className='pr-md-1' md='9'>\n                      <h6>Discount:</h6>\n                    </Col>\n                    <Col className='pr-md-1' md='3'>\n                      <input\n                        style={{\n                          color: \"#f19066\",\n                          width: \"100%\",\n                          borderLeft: \"0px\",\n                          borderRight: \"0px\",\n                          borderTop: \"0px\",\n                          backgroundColor: \"transparent\",\n                          textAlign: \"center\",\n                        }}\n                        placeholder='Not Selected'\n                        type='number'\n                        value={this.state.paymentData.discount}\n                        onChange={(event) => {\n                          this.state.paymentData.discount = event.target.value\n                            ? event.target.value\n                            : 0;\n                          if (\n                            this.state.paymentData.discount >\n                            this.state.paymentData.onlyPrice * 0.8\n                          ) {\n                            this.state.paymentData.discount = 0;\n                            alert(\"You can't give discount more than 80%\");\n                          }\n                          this.state.paymentData.totalAmount =\n                            this.getTotalAmountWithExpense() -\n                            this.state.paymentData.discount;\n                          this.setState(this.state);\n                          this.calculateDue();\n                        }}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col className='pr-md-1' md='9'>\n                      <h6> Total Paid:</h6>\n                    </Col>\n                    <Col className='pr-md-1' md='3'>\n                      <input\n                        style={{\n                          color: \"#f19066\",\n                          width: \"100%\",\n                          borderLeft: \"0px\",\n                          borderRight: \"0px\",\n                          borderTop: \"0px\",\n                          backgroundColor: \"transparent\",\n                          textAlign: \"center\",\n                        }}\n                        placeholder='Not Paid'\n                        type='number'\n                        value={this.state.paymentData.paid}\n                        onChange={(eve) => {\n                          let val = eve.target.value;\n                          if (val > this.state.paymentData.totalAmount) {\n                            alert(\n                              \"Please, give a valid pay amount.\\n(Paument is more than total amount)\"\n                            );\n                            val = \"\";\n                          }\n                          this.state.paymentData.paid = val ? val : \"\";\n                          this.state.paymentData.due =\n                            this.state.paymentData.totalAmount -\n                            (val ? val : 0);\n                          this.setState(this.state);\n                        }}\n                      />\n                    </Col>\n                  </Row>\n\n                  <hr />\n\n                  <h6>\n                    Total Due:\n                    <span style={{ position: \"absolute\", right: \"5%\" }}>\n                      {this.state.paymentData.due}\n                    </span>\n                  </h6>\n                </CardBody>\n              </Card>\n              <Card style={{ height: \"50%\" }}>\n                <Table style={{ maxHeight: \"80%\", overflow: \"auto\" }}>\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th className='text-left'>Unit Price</th>\n                      <th className='text-left'>Quantity</th>\n                      <th className='text-left'>Total price</th>\n                      <th className='text-left'>\n                        <i\n                          style={{ color: \"#ff5252\" }}\n                          className='tim-icons icon-trash-simple'></i>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.products.map((p, i) => {\n                      return (\n                        <tr style={{ cursor: \"pointer\" }} map={p.p_id}>\n                          <td\n                            onClick={() => {\n                              this.updateProduct(p, i);\n                            }}>\n                            {p.name}\n                          </td>\n                          <td\n                            onClick={() => {\n                              this.updateProduct(p, i);\n                            }}\n                            className='text-center'>\n                            {p.unitPrice}\n                          </td>\n                          <td className='text-center'>x{p.quantity}</td>\n                          <td className='text-center'>\n                            {p.unitPrice * p.quantity}\n                          </td>\n                          <td\n                            className='text-center'\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => {\n                              this.removeProduct(p.p_id);\n                            }}>\n                            <i\n                              style={{ color: \"#ff5252\" }}\n                              className='tim-icons icon-trash-simple'></i>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n\n  updateProduct = (p, i) => {\n    this.state.productData.p_id = p.p_id;\n    this.state.productData.quantity = p.quantity;\n    this.state.productData.remaining = p.remaining;\n    this.state.productData.unitPrice = p.unitPrice;\n    this.state.productData.old = true;\n    this.state.productData.index = i;\n    this.state.value = p.name;\n    this.setState(this.state);\n  };\n\n  removeProduct = (id) => {\n    const filtered = this.state.products.filter((p) => p.p_id != id);\n    this.state.products = [...filtered];\n    this.calculateOnlyPrice();\n  };\n\n  addDelivery = (event) => {\n    this.state.delivery_charge.active = !this.state.delivery_charge.active;\n    this.state.expensePrice += this.state.delivery_charge.active\n      ? this.state.delivery_charge.fee\n      : -this.state.delivery_charge.fee;\n    this.state.paymentData.amount =\n      this.getTotalAmountWithExpense() - this.state.paymentData.discount;\n    this.setState(this.state);\n    this.calculateDue();\n  };\n\n  changeUI = (d) => {\n    this.setState({ ui: d });\n  };\n\n  handleNewClientCheckBox = (event) => {\n    let data = this.state.clientUI;\n    data.old = !this.state.clientUI.old;\n    console.log(!event.target.value);\n    this.setState({ clientUI: data });\n  };\n\n  showView = () => {\n    if (this.state.ui == 0) {\n      return (\n        <div>\n          <FormGroup check>\n            <Label check>\n              <Input\n                type='checkbox'\n                value={!this.state.clientUI.old}\n                onChange={this.handleNewClientCheckBox}\n              />{\" \"}\n              New Client\n              <span className='form-check-sign'>\n                <span className='check'></span>\n              </span>\n            </Label>\n          </FormGroup>\n          <br />\n          {this.clientForm()}\n        </div>\n      );\n    } else if (this.state.ui == 1) {\n      return this.addExpenseView();\n    }\n  };\n  setBradeCumb = () => {\n    if (this.state.ui == 0) {\n      return (\n        <Breadcrumb>\n          <BreadcrumbItem active onClick={() => this.changeUI(0)}>\n            Client\n          </BreadcrumbItem>\n          <BreadcrumbItem onClick={() => this.changeUI(1)}>\n            <a href='#'>Add Expense</a>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      );\n    } else {\n      return (\n        <Breadcrumb>\n          <BreadcrumbItem active onClick={() => this.changeUI(0)}>\n            <a href='#'>Client</a>\n          </BreadcrumbItem>\n          <BreadcrumbItem onClick={() => this.changeUI(1)}>\n            Add Expense\n          </BreadcrumbItem>\n        </Breadcrumb>\n      );\n    }\n  };\n  handleClientSug = (id) => {\n    let client = this.state.oldClients.filter((c) => c.c_id == id);\n    client = client[0];\n    this.state.phoneNum = client.pn;\n    this.state.clientInfo = { ...this.state.clientInfo, ...client };\n    this.state.oldClients = [];\n    this.state.cid = id;\n    this.setState(this.state);\n  };\n  clientSuggestion = () => {\n    if (this.state.oldClients.length == 0) return;\n    return (\n      <div\n        style={{\n          padding: \"5px\",\n          maxHeight: \"7%\",\n          overflow: \"auto\",\n          backgroundColor: \"#3d3d3d\",\n        }}\n        key={Date.now()}>\n        {this.state.oldClients.map((c) => {\n          return (\n            <span\n              key={c.c_id}\n              style={{ color: \"#7efff5\" }}\n              onClick={() => this.handleClientSug(c.c_id)}>\n              {c.name}- {c.pn}\n            </span>\n          );\n        })}\n      </div>\n    );\n  };\n  clientForm = () => {\n    if (this.state.clientUI.old) {\n      return (\n        <div>\n          <Input\n            placeholder='Enter phone number only'\n            type='number'\n            value={this.state.phoneNum}\n            onChange={this.handleClientNum}\n          />\n\n          {this.clientSuggestion()}\n        </div>\n      );\n    } else {\n      return (\n        <Form>\n          <fieldset\n            style={{\n              border: \"1px solid \",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n            }}>\n            <legend style={{ fontSize: \"medium\" }}>Client Information</legend>\n            <Row>\n              <Col className='pr-md-1' md='5'>\n                <FormGroup>\n                  <label>Client Name</label>\n                  <Input\n                    placeholder='Enter Full Name'\n                    type='text'\n                    value={this.state.clientInfo.name}\n                    onChange={(event) => {\n                      this.state.clientInfo.name = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col className='pl-md-1' md='5'>\n                <FormGroup>\n                  <label htmlFor='exampleInputEmail1'>Email address</label>\n                  <Input\n                    placeholder='mike@email.com'\n                    type='email'\n                    value={this.state.clientInfo.email}\n                    onChange={(event) => {\n                      this.state.clientInfo.email = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col className='pl-ml-1' md='10'>\n                <FormGroup>\n                  <label htmlFor='exampleInputEmail1'>Phone Number</label>\n                  <Input\n                    placeholder='Enter Phone Number'\n                    value={this.state.clientInfo.pn}\n                    onChange={(event) => {\n                      this.state.clientInfo.pn = event.target.value;\n                      this.setState(this.state);\n                    }}\n                    type='text'\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col md='12'>\n                <FormGroup>\n                  <label>Address</label>\n                  <Input\n                    placeholder='Home Address'\n                    type='text'\n                    value={this.state.clientInfo.address}\n                    onChange={(event) => {\n                      this.state.clientInfo.address = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col className='pr-md-1' md='4'>\n                <FormGroup>\n                  <label>City</label>\n                  <Input\n                    placeholder='City'\n                    type='text'\n                    value={this.state.clientInfo.city}\n                    onChange={(event) => {\n                      this.state.clientInfo.city = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col className='pl-md-1' md='4'>\n                <FormGroup>\n                  <label>Postal Code</label>\n                  <Input\n                    placeholder='ZIP Code'\n                    type='number'\n                    value={this.state.clientInfo.zip}\n                    onChange={(event) => {\n                      this.state.clientInfo.zip = event.target.value;\n                      this.setState(this.state);\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </fieldset>\n        </Form>\n      );\n    }\n  };\n  handleClientNum = (event) => {\n    let number = event.target.value;\n    axios.post(`/api/client/get/${number}`).then((data) => {\n      this.setState({ oldClients: data.data.data });\n      console.log(data);\n    });\n    this.setState({ phoneNum: number });\n  };\n  addExpenseView = () => {\n    return (\n      <Row>\n        <Col className='pr-md-1' md='12'>\n          <Card>\n            <CardBody>\n              <Form>\n                <fieldset\n                  style={{\n                    border: \"1px solid \",\n                    padding: \"10px\",\n                    borderRadius: \"5px\",\n                  }}>\n                  <legend style={{ fontSize: \"medium\" }}>\n                    Expense information\n                  </legend>\n                  <Row>\n                    <Col md='11'>\n                      <FormGroup>\n                        <label>Amount</label>\n                        <Input\n                          placeholder='paid'\n                          type='number'\n                          value={this.state.expenseData.price}\n                          onChange={(event) => {\n                            this.state.expenseData.price = event.target.value;\n                            this.state.expensePrice = event.target.value\n                              ? event.target.value\n                              : 0;\n                            this.setState(this.state);\n                            this.calculateOnlyPrice();\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='11'>\n                      <FormGroup>\n                        <label htmlFor='exampleInputEmail1'>Details</label>\n                        <Input\n                          placeholder='Write details about expense'\n                          type='textarea'\n                          value={this.state.expenseData.details}\n                          onChange={(event) => {\n                            this.state.expenseData.details = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </fieldset>\n              </Form>\n            </CardBody>\n            {/* <CardFooter>\n              <Button className='btn-fill' color='primary' type='submit'>\n                Save\n              </Button>\n            </CardFooter> */}\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  //client\n  submissionData = () => {\n    if (this.state.products.length <= 0) {\n      Swal.fire(\"Oops!!\", \"No product(s) added \", \"warning\");\n    } else if (\n      this.state.clientInfo.name == \"\" ||\n      this.state.clientInfo.pn == \"\"\n    ) {\n      Swal.fire(\"Oops!!\", \"No Client Added\", \"warning\");\n    } else if (\n      this.state.expenseData.price == \"\" ||\n      this.state.expenseData.details == \"\"\n    ) {\n      Swal.fire(\"Oops!!\", 'No Expense or put \"0\" in expense', \"warning\");\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/purchase/add\",\n        data: {\n          client: {\n            old: this.state.clientUI.old,\n            info: this.state.clientInfo,\n            cid: this.state.cid,\n          },\n          expense: this.state.expenseData,\n          payment: this.state.paymentData,\n          products: this.state.products,\n        },\n      })\n        .then(function (response) {\n          //handle success\n          if (response.status == 200) {\n            Swal.fire({\n              title: \"Good Job!!\",\n              text: \"Operation Success \",\n              icon: \"success\",\n              onClose: () => {\n                window.location.reload(false);\n              },\n            });\n            console.log(response.status);\n          }\n        })\n        .catch(function (response) {\n          //handle error\n          console.log(response);\n        });\n    }\n  };\n}\n\nexport default Purchase;\n","/** @format */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nclass Storage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [1],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount = () => {\n    this.relaodData();\n  };\n\n  relaodData = () => {\n    this.setState({ isLoading: true });\n    axios({\n      method: \"get\",\n      url: \"/api/product/all\",\n    }).then((data) => {\n      data = data.data;\n      console.log(data);\n      data.err == \"no\"\n        ? this.setState({ data: [...data.data] })\n        : this.setState({ data: [] });\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    return (\n      <div className='content'>\n        <button\n          style={{\n            padding: \"10px\",\n            border: \"1px solid white\",\n            backgroundColor: \"transparent\",\n            color: \"white\",\n          }}\n          onClick={() => {\n            window.location.href = \"/admin/addstorage\";\n          }}>\n          Add New Product\n        </button>\n        <br />\n        {this.renderFunc()}\n      </div>\n    );\n  }\n\n  renderFunc = () => {\n    if (this.state.isLoading) return this.showLoading();\n    else if (this.state.data.length == 0) return this.showNoData();\n    else if (this.state.data.length > 0) return this.showData();\n  };\n\n  showNoData = () => {\n    return (\n      <Row>\n        <Col md='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Storage Data</CardTitle>\n            </CardHeader>\n\n            <CardBody>\n              <h3 style={{ textAlign: \"center\" }}>No Data</h3>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n  showLoading = () => {\n    return (\n      <div class='card bg-info text-white' style={{ margin: \"0 auto\" }}>\n        <div class='card-body' style={{ textAlign: \"center\" }}>\n          <div class='spinner-border text-dark'></div>{\" \"}\n          <button onClick={() => window.open(\"https://google.com\")}>\n            Loading\n          </button>\n        </div>\n      </div>\n    );\n  };\n  //return the data view\n  showData = () => {\n    return (\n      <Row>\n        <Col md='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Storage Data</CardTitle>\n            </CardHeader>\n\n            <CardBody>\n              <fieldset\n                style={{\n                  border: \"1px solid \",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}>\n                <legend style={{ fontSize: \"medium\" }}>Search</legend>\n                <Row>\n                  <Col className='pr-md-1' md='11'>\n                    <FormGroup>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText>\n                            <i className='tim-icons icon-zoom-split' />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          defaultValue=''\n                          placeholder='enter key to search ..'\n                          type='text'\n                        />\n                      </InputGroup>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </fieldset>\n              <br />\n              <Table className='tablesorter' responsive>\n                <thead className='text-primary'>\n                  <tr>\n                    <th>#</th>\n                    <th className='text-center'>Name</th>\n                    <th className='text-center'>Amount</th>\n                    <th className='text-center'>Unit Price</th>\n                    <th className='text-center'>Update</th>\n                    <th className='text-center'>Delete</th>\n                  </tr>\n                </thead>\n                <tbody id='t-body'>\n                  {this.state.data.map((item) => (\n                    <tr key={item.p_id}>\n                      <td>{item.p_id}</td>\n                      <td className='text-center'>{item.name}</td>\n                      <td className='text-center'>{item.amount}</td>\n                      <td className='text-center'>{item.unit_price}</td>\n                      <td className='text-center'>\n                        <Link to={`/admin/single/${item.p_id}`}>Update</Link>\n                      </td>\n                      <td className='text-center'>\n                        <button\n                          className='btn btn-outline-delete'\n                          onClick={() => {\n                            this.deleteProduct(item.p_id);\n                          }}>\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  deleteProduct = (id) => {\n    Swal.fire({\n      title: \"⛈ Are You Sure?\",\n      text: \"Operation can't revertable\",\n      icon: \"warning\",\n      showCancelButton: true,\n      showCloseButton: true,\n      showLoaderOnConfirm: true,\n    }).then((r) => {\n      if (r.value) {\n        axios({\n          method: \"post\",\n          url: `/api/product/delete/${id}`,\n        }).then((response) => {\n          //handle success\n          if (response.status == 200) {\n            Swal.fire({\n              title: \"❗ Product Deleted\",\n              text: \"Product is no longer available\",\n              icon: \"success\",\n              onClose: () => {\n                this.relaodData();\n              },\n            });\n          }\n        });\n      } else {\n        Swal.fire(\"⛑, Safe\", \"Operation cancelled. \", \"info\");\n      }\n    });\n  };\n}\n\nexport default Storage;\n","/** @format */\n\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nclass Client extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.relaodData();\n  };\n  relaodData = () => {\n    this.setState({ isLoading: true });\n    fetch(\"/api/client/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ data: data.data });\n        this.setState({ isLoading: false });\n      });\n  };\n  render() {\n    return (\n      <div className='content'>\n        <button\n          style={{\n            padding: \"10px\",\n            border: \"1px solid white\",\n            backgroundColor: \"transparent\",\n            color: \"white\",\n          }}\n          onClick={() => {\n            window.location.href = \"/admin/client/addclient\";\n          }}>\n          Add New Client\n        </button>\n        <br />\n        {this.renderFunc()}\n      </div>\n    );\n  }\n\n  renderFunc = () => {\n    if (this.state.isLoading) return this.showLoading();\n    else if (!this.state.data) return this.showNoData();\n    else if (this.state.data) return this.showData();\n  };\n\n  showNoData = () => {\n    return (\n      <div class='card bg-warning text-white' style={{ margin: \"0 auto\" }}>\n        <div class='card-body' style={{ textAlign: \"center\" }}>\n          No Data Found\n        </div>\n      </div>\n    );\n  };\n  showLoading = () => {\n    return (\n      <div class='card bg-info text-white' style={{ margin: \"0 auto\" }}>\n        <div class='card-body' style={{ textAlign: \"center\" }}>\n          <div class='spinner-border text-dark'></div>Loading\n        </div>\n      </div>\n    );\n  };\n  //return the data view\n  showData = () => {\n    return (\n      <Row>\n        <Col md='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Client Data</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <fieldset\n                style={{\n                  border: \"1px solid \",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}>\n                <legend style={{ fontSize: \"medium\" }}>Search</legend>\n                <Row>\n                  <Col className='pr-md-1' md='11'>\n                    <FormGroup>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText>\n                            <i className='tim-icons icon-zoom-split' />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          defaultValue=''\n                          placeholder='enter key to search ..'\n                          type='text'\n                        />\n                      </InputGroup>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </fieldset>\n              <br />\n              <Table className='tablesorter' responsive>\n                <thead className='text-primary'>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>Address</th>\n                    <th>Show</th>\n                    <th>Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.data.map((m) => {\n                    return (\n                      <tr>\n                        <td>{m.cid}</td>\n                        <td>{m.name}</td>\n                        <td>{m.email}</td>\n                        <td>{m.pn}</td>\n                        <td>{m.address}</td>\n                        <td>\n                          <Link to={`/admin/client/${m.cid}`}>Details</Link>\n                        </td>\n                        <td>\n                          <button\n                            className='btn btn-danger'\n                            onClick={() => this.deleteClient(m.cid)}>\n                            Delete\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  deleteClient = (id) => {\n    Swal.fire({\n      title: \"⛈ Are You Sure?\",\n      text: \"Operation can't revertable\",\n      icon: \"warning\",\n    }).then((r) => {\n      if (r.value) {\n        axios({\n          method: \"post\",\n          url: `/api/client/delete/${id}`,\n        }).then((response) => {\n          //handle success\n          if (response.status == 200) {\n            Swal.fire({\n              title: \"❗ Client Deleted\",\n              text: \"Client is no longer available\",\n              icon: \"success\",\n              onClose: () => {\n                this.relaodData();\n              },\n            });\n          }\n        });\n      } else {\n        Swal.fire(\"⛑, Safe\", \"Operation cancelled. \", \"info\");\n      }\n    });\n  };\n}\n\nexport default Client;\n","/** @format */\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Datatable from \"react-bs-datatable\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n// reactstrap components\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Button,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Form,\n} from \"reactstrap\";\n\nclass Expense extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenseData: true,\n      expenseList: [],\n      expenseType: [],\n      typeTxt: \"\",\n      typeToDelete: \"DEFAULT\",\n      expense: {\n        type: \"\",\n        details: \"\",\n        price: \"\",\n      },\n    };\n    this.headers = [\n      { title: \"#\", prop: \"e_id\", sortable: true, filterable: true },\n      { title: \"Date\", prop: \"timestamp\", sortable: true, filterable: true },\n      { title: \"Amount\", prop: \"price\", sortable: true, filterable: true },\n      { title: \"Details\", prop: \"details\", sortable: true, filterable: true },\n      { title: \"Show\", prop: \"e_id\", sortable: true, filterable: true },\n    ];\n  }\n\n  componentDidMount = () => {\n    this.relaodData();\n    this.reloadType();\n  };\n\n  relaodData = () => {\n    fetch(\"/api/expense/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.err) this.setState({ expenseList: [...data.data] });\n      });\n  };\n\n  reloadType = () => {\n    fetch(\"/api/expense/type/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.err) this.setState({ expenseType: [...data.data] });\n      });\n  };\n\n  handleChangeTab = (d) => {\n    this.setState({ expenseData: d });\n  };\n\n  render() {\n    return (\n      <div className='content'>\n        {this.setBradeCumb()}\n\n        {this.state.expenseData\n          ? this.expenseDataView()\n          : this.addExpenseView()}\n      </div>\n    );\n  }\n\n  expenseDataView = () => {\n    if (this.state.expenseList.length < 0) {\n      return <h2 style={{ textAlign: \"center\" }}>No Data</h2>;\n    }\n    return (\n      <Row>\n        <Col md='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Expense Data</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <fieldset\n                style={{\n                  border: \"1px solid \",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}>\n                <legend style={{ fontSize: \"medium\" }}>Search</legend>\n                <Row>\n                  <Col className='pr-md-1' md='11'>\n                    <FormGroup>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText>\n                            <i className='tim-icons icon-zoom-split' />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          defaultValue=''\n                          placeholder='enter key to search ..'\n                          type='text'\n                        />\n                      </InputGroup>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </fieldset>\n              <br />\n              <Table className='tablesorter' id='expense' responsive>\n                <thead className='text-primary'>\n                  <tr>\n                    <th>#</th>\n                    <th>Date</th>\n                    <th>Amount</th>\n                    <th>Details</th>\n                    <th>Show</th>\n                    <th>Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.expenseList.map((data) => {\n                    return (\n                      <tr key={data.e_id}>\n                        <td>{data.e_id}</td>\n                        <td>{data.timestamp}</td>\n                        <td>{data.price}</td>\n                        <td>{data.details}</td>\n                        <td>\n                          <Link to={\"/admin/exp/\" + data.e_id}>Visit</Link>\n                        </td>\n                        <button\n                          className='btn btn-outline-danger'\n                          onClick={() => {\n                            this.deleteExpense(data.e_id);\n                          }}>\n                          Delete\n                        </button>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  addExpenseView = () => {\n    return (\n      <Row>\n        <Col className='pr-md-1' md='8'>\n          <Card>\n            <CardHeader>\n              <h5 className='title'>Expense Form</h5>\n            </CardHeader>\n            <CardBody>\n              <Form>\n                <fieldset\n                  style={{\n                    border: \"1px solid \",\n                    padding: \"10px\",\n                    borderRadius: \"5px\",\n                  }}>\n                  <legend style={{ fontSize: \"medium\" }}>\n                    Expense information\n                  </legend>\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Expense Type</label>\n                        <Input\n                          value={this.state.expense.type}\n                          placeholder='Select Type'\n                          type='select'\n                          onChange={(event) => {\n                            this.state.expense.type = event.target.value;\n                            this.setState(this.state);\n                          }}>\n                          {this.state.expenseType.map((m) => {\n                            return <option value={m.eType}>{m.name}</option>;\n                          })}\n                        </Input>\n                      </FormGroup>\n                    </Col>\n                    <Col md='5'>\n                      <FormGroup>\n                        <label>Amount</label>\n                        <Input\n                          value={this.state.expense.price}\n                          placeholder='Amount paid'\n                          type='number'\n                          onChange={(event) => {\n                            this.state.expense.price = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='11'>\n                      <FormGroup>\n                        <label htmlFor='exampleInputEmail1'>Details</label>\n                        <Input\n                          value={this.state.expense.details}\n                          placeholder='Write details about expense'\n                          type='textarea'\n                          onChange={(event) => {\n                            this.state.expense.details = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  {/* <Row>\n                    <Col className='pr-md-1' md='4'>\n                      <FormGroup>\n                        <label>Select date</label>\n                        <Input defaultValue='' placeholder='' type='date' />\n                      </FormGroup>\n                    </Col>\n                  </Row> */}\n                </fieldset>\n              </Form>\n            </CardBody>\n            <CardFooter>\n              <Button\n                className='btn-fill'\n                color='primary'\n                type='button'\n                onClick={() => {\n                  this.SaveData();\n                }}>\n                Save\n              </Button>\n            </CardFooter>\n          </Card>\n        </Col>\n\n        <Col className='pr-md-1' md='4'>\n          <Card>\n            <CardHeader>\n              <h5 className='title'>Add New Expense Type</h5>\n            </CardHeader>\n            <CardBody>\n              <Form>\n                <Row>\n                  <Col className='pr-md-1' md='11'>\n                    <FormGroup>\n                      <label>Expense Type</label>\n                      <Input\n                        value={this.state.typeTxt}\n                        placeholder='Enter a type'\n                        type='text'\n                        onChange={(event) => {\n                          this.state.typeTxt = event.target.value;\n                          this.setState(this.state);\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Form>\n            </CardBody>\n            <CardFooter>\n              <Button\n                className='btn-fill'\n                color='primary'\n                type='button'\n                onClick={() => {\n                  this.addType();\n                }}>\n                Add\n              </Button>\n            </CardFooter>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <h5 className='title'>Remove Expense Type</h5>\n            </CardHeader>\n            <CardBody>\n              <Form>\n                <Row>\n                  <Col className='pr-md-1' md='11'>\n                    <FormGroup>\n                      <label>Expense Type</label>\n                      <Input\n                        value={this.state.typeToDelete}\n                        placeholder='Select a type'\n                        type='select'\n                        onChange={(event) => {\n                          this.setState({ typeToDelete: event.target.value });\n                        }}>\n                        <option key='oo' value='DEFAULT' disabled>\n                          Select a type\n                        </option>\n                        {this.state.expenseType.map((m) => {\n                          return (\n                            <option key={m.eType} value={m.eType}>\n                              {m.name}\n                            </option>\n                          );\n                        })}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Form>\n            </CardBody>\n            <CardFooter>\n              <Button\n                className='btn-fill'\n                color='primary'\n                type='button'\n                onClick={() => {\n                  this.deleteType();\n                }}>\n                Delete\n              </Button>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  setBradeCumb = () => {\n    if (this.state.expenseData) {\n      return (\n        <Breadcrumb>\n          <BreadcrumbItem active onClick={() => this.handleChangeTab(true)}>\n            All Expense Data\n          </BreadcrumbItem>\n          <BreadcrumbItem onClick={() => this.handleChangeTab(false)}>\n            <a href='#'>Add Expense</a>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      );\n    } else {\n      return (\n        <Breadcrumb>\n          <BreadcrumbItem onClick={() => this.handleChangeTab(true)}>\n            <a href='#'>All Expense Data</a>\n          </BreadcrumbItem>\n          <BreadcrumbItem active onClick={() => this.handleChangeTab(false)}>\n            Add Expense\n          </BreadcrumbItem>\n        </Breadcrumb>\n      );\n    }\n  };\n\n  addType = () => {\n    axios({\n      method: \"POST\",\n      url: \"/api/expense/type/add\",\n      data: { name: this.state.typeTxt },\n    }).then((res) => {\n      if (res.status == 200) alert(\"Type Added\");\n      this.setState({ typeTxt: \"\" });\n      this.reloadType();\n    });\n  };\n\n  deleteType = () => {\n    axios({\n      method: \"POST\",\n      url: `/api/expense/type/delete`,\n      data: { eType: this.state.typeToDelete },\n    }).then((res) => {\n      if (res.status == 200) alert(\"Type Deleted\");\n      this.setState({ typeToDelete: \"DEFAULT\" });\n      this.reloadType();\n    });\n  };\n\n  SaveData = () => {\n    if (this.state.expense.name == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid name\",\n        icon: \"warning\",\n      });\n    } else if (this.state.expense.price == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid number for price\",\n        icon: \"warning\",\n      });\n    } else {\n      axios({\n        method: \"POST\",\n        url: \"/api/expense/add\",\n        data: this.state.expense,\n      }).then((res) => {\n        if (res.status == 200)\n          Swal.fire({\n            title: \"🚚\",\n            text: \"Expense Added\",\n            icon: \"success\",\n          }).then(() => {\n            window.location.href = \"/admin/expense\";\n          });\n      });\n    }\n  };\n\n  deleteExpense = (id) => {\n    Swal.fire({\n      title: \"⛈ Are You Sure?\",\n      text: \"Operation can't revertable\",\n      icon: \"warning\",\n    }).then((r) => {\n      if (r.value) {\n        axios({\n          method: \"post\",\n          url: `/api/expense/delete/${id}`,\n        }).then((response) => {\n          //handle success\n          if (response.status == 200) {\n            Swal.fire({\n              title: \"❗ Expense Deleted\",\n              text: \"Expense is no longer available\",\n              icon: \"success\",\n              onClose: () => {\n                this.relaodData();\n              },\n            });\n          }\n        });\n      } else {\n        Swal.fire(\"⛑, Safe\", \"Operation cancelled. \", \"info\");\n      }\n    });\n  };\n}\n\nexport default Expense;\n","/** @format */\n\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport XLXS from \"xlsx\";\n\nimport { saveAs } from \"@progress/kendo-file-saver\";\n\nclass Client extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTransections: [],\n      data: [],\n      selectedData: [],\n      selectedProducts: [],\n      selectedClient: null,\n      isLoading: false,\n      modalDemo: false,\n    };\n  }\n  toggleModalDemo() {\n    this.state.modalDemo = !this.state.modalDemo;\n    this.setState();\n  }\n\n  componentDidMount = () => {\n    this.reloadDatas();\n  };\n\n  reloadDatas = () => {\n    this.setState({ isLoading: true });\n    fetch(\"/api/operation/trans/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        //console.log(data);\n        this.state.allTransections = [...data];\n        this.setState(this.state);\n      });\n    fetch(\"/api/operation/transection/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({ data: [...data.data], selectedData: [...data.data] });\n        this.setState({ isLoading: false });\n        console.log(this.state.data);\n      });\n  };\n\n  render() {\n    return <div className='content'>{this.renderFunc()}</div>;\n  }\n\n  renderFunc = () => {\n    if (this.state.isLoading) return this.showLoading();\n    else if (!this.state.data) return this.showNoData();\n    else if (this.state.data) return this.showData();\n  };\n\n  showNoData = () => {\n    return (\n      <div className='card bg-warning text-white' style={{ margin: \"0 auto\" }}>\n        <div className='card-body' style={{ textAlign: \"center\" }}>\n          No Data Found\n        </div>\n      </div>\n    );\n  };\n  showLoading = () => {\n    return (\n      <div className='card bg-info text-white' style={{ margin: \"0 auto\" }}>\n        <div className='card-body' style={{ textAlign: \"center\" }}>\n          <div className='spinner-border text-dark'></div>Loading\n        </div>\n      </div>\n    );\n  };\n  //return the data view\n  showData = () => {\n    const dataList = this.state.selectedData.reverse();\n    return (\n      <Row>\n        <Col md='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Transection History</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <fieldset\n                style={{\n                  border: \"1px solid \",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                }}>\n                <legend style={{ fontSize: \"medium\" }}>Search</legend>\n                <Row>\n                  <Col className='pr-md-1' md='7'>\n                    <FormGroup>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText>\n                            <i className='tim-icons icon-zoom-split' />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          defaultValue=''\n                          placeholder='Enter transection id to search ..'\n                          type='text'\n                          onChange={(event) => {\n                            let str = event.target.value;\n                            if (!str) {\n                              this.state.selectedData = [...this.state.data];\n                              this.setState();\n                              return;\n                            }\n\n                            this.state.selectedData = this.state.data.filter(\n                              (d) => d.t_id.toLowerCase().indexOf(str) > -1\n                            );\n                            this.setState();\n                          }}\n                        />\n                      </InputGroup>\n                    </FormGroup>\n                  </Col>\n                  <Col className='pr-md-1' md='4'>\n                    <Button\n                      className='btn-fill'\n                      color='primary'\n                      type='button'\n                      onClick={() => this.exportXCL()}>\n                      Export Excel\n                    </Button>\n                  </Col>\n                </Row>\n              </fieldset>\n              <br />\n              <Table className='tablesorter' responsive>\n                <thead className='text-primary'>\n                  <tr>\n                    <th>Time</th>\n                    <th>Type</th>\n                    <th>Total Items</th>\n                    <th>Products</th>\n                    <th>Amount</th>\n                    <th>Expense</th>\n                    <th>Paid</th>\n                    <th>Due</th>\n                    {/* <th>Client</th> */}\n                  </tr>\n                </thead>\n                <tbody>\n                  {dataList.map((t) => {\n                    return (\n                      <tr>\n                        <td>{t.time}</td>\n                        <td>{t.type}</td>\n                        <td>{t.amount.totalItems}</td>\n                        <td style={{ cursor: \"pointer\" }}>\n                          <a\n                            style={{ color: \"#7158e2\" }}\n                            onClick={() => {\n                              this.state.selectedProducts = [...t.products];\n                              this.state.modalDemo = true;\n                              this.setState({\n                                selectedProducts: [...t.products],\n                                selectedClient: t.clients[0],\n                                modalDemo: true,\n                              });\n                            }}>\n                            Information\n                          </a>\n                        </td>\n                        <td>{t.amount.totalAmount}</td>\n                        <td>\n                          <Link\n                            to={\"/admin/exp/\" + t.eid}\n                            style={\n                              t.eid > 0\n                                ? { display: \"block\" }\n                                : { display: \"none\" }\n                            }>\n                            Expense\n                          </Link>\n                        </td>\n                        <td>{t.payment.paid}</td>\n                        <td>{t.payment.due}</td>\n                        {/* <td>Update Paid</td> */}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n        <Card>\n          <Modal\n            isOpen={this.state.modalDemo}\n            toggle={() => {\n              this.toggleModalDemo();\n            }}>\n            {/* <div\n              className='modal-header'\n              style={{ backgroundColor: \"#3d3d3d\" }}>\n              <h5\n                className='modal-title'\n                id='exampleModalLabel'\n                style={{ color: \"white\" }}>\n                Client & Product Data\n              </h5>\n              {/* <button\n                type='button'\n                className='close'\n                data-dismiss='modal'\n                aria-hidden='true'\n                onClick={() => {\n                  this.toggleModalDemo();\n                }}>\n                <i className='tim-icons icon-simple-remove' />\n              </button> \n            </div> */}\n            <ModalBody style={{ backgroundColor: \"#3d3d3d\" }}>\n              <h4 style={{ color: \"#ccae62\" }}>\n                <u>Client Data</u>\n              </h4>\n              {this.showClientData()}\n              <h4 style={{ color: \"#ccae62\" }}>\n                <u>Products</u>\n              </h4>\n              {this.showProductList()}\n            </ModalBody>\n            <ModalFooter style={{ backgroundColor: \"#3d3d3d\" }}>\n              <Button color='secondary' onClick={() => this.toggleModalDemo()}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </Card>\n      </Row>\n    );\n  };\n\n  showProductList = () => {\n    console.clear();\n    console.log(this.state.selectedProducts);\n    return (\n      <Table style={{ maxHeight: \"80%\", overflow: \"auto\" }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th className='text-left'>Unit Price</th>\n            <th className='text-left'>Quantity</th>\n            <th className='text-left'>Total price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.selectedProducts.map((p, i) => {\n            return (\n              <tr style={{ cursor: \"pointer\" }} map={p.p_id}>\n                <td>{p.name}</td>\n                <td className='text-center'>{p.unitPrice}</td>\n                <td className='text-center'>x{p.quantity}</td>\n                <td className='text-center'>{p.unitPrice * p.quantity}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  };\n\n  showClientData = () => {\n    if (this.state.selectedClient == null) {\n      return (\n        <div>\n          <h5>No Client :(</h5>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h6>\n          Client Id:{\"  \"}\n          <i style={{ color: \"#d35400\" }}>{this.state.selectedClient.cid}</i>\n        </h6>\n        <h6>\n          Client Name:{\"  \"}\n          <i style={{ color: \"#16a085\" }}>{this.state.selectedClient.name}</i>\n        </h6>\n        <h6>\n          Client Phone Number:{\"  \"}\n          <i style={{ color: \"#2980b9\" }}>{this.state.selectedClient.pn}</i>\n        </h6>\n        <hr />\n      </div>\n    );\n  };\n\n  s2ab = (s) => {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff;\n    return buf;\n  };\n\n  exportXCL = () => {\n    if (this.state.allTransections.length > 0) {\n      let wb = XLXS.utils.book_new();\n      wb.Props = {\n        Title: `Transection of ${new Date().getDate()}/${new Date().getMonth()}/${new Date().getFullYear()} - T:${new Date().toLocaleString(\n          \"en-US\",\n          { hour: \"numeric\", minute: \"numeric\", hour12: true }\n        )}`,\n        Subject: \"Daily Transection\",\n        Author: \"SellFish Software\",\n        CreatedDate: new Date(),\n      };\n      wb.SheetNames.push(\"Clear Sheet\");\n      let a = [];\n      let data = [\n        [\n          \"#\",\n          \"ID\",\n          \"Time\",\n          \"Type\",\n          \"Products\",\n          \"Total Amount\",\n          \"Paid\",\n          \"Due\",\n          \"Discount\",\n          \"Client Name\",\n          \"Phone Number\",\n        ],\n      ];\n      let it = this.state.allTransections;\n      for (let i = 0; i < it.length; i++) {\n        a.push(i + 1);\n        a.push(it[i].t_id);\n        let time = new Date(it[i].time);\n        a.push(\n          `${time.getDate()}/${time.getMonth()}/${time.getFullYear()}: T- ${time.toLocaleString(\n            \"en-US\",\n            { hour: \"numeric\", minute: \"numeric\", hour12: true }\n          )}`\n        );\n        a.push(it[i].type);\n        a.push(it[i].products.map((e) => e.name).join(\",\"));\n        a.push(it[i].amount.totalAmount);\n        a.push(it[i].payment.paid);\n        a.push(it[i].payment.due);\n        a.push(it[i].amount.discount);\n        a.push(it[i].client[0].name);\n        a.push(it[i].client[0].pn);\n        data.push(a);\n        a = [];\n      }\n\n      let ws = XLXS.utils.aoa_to_sheet(data);\n      wb.Sheets[\"Clear Sheet\"] = ws;\n      let dataView = XLXS.write(wb, {\n        bookType: \"xlsx\",\n        type: \"binary\",\n      });\n      saveAs(\n        new Blob([this.s2ab(dataView)], {\n          type: \"application/octet-stream\",\n        }),\n        `DailyTransection${Date.now()}.xlsx`\n      );\n    } else {\n      alert(\"No Data to export\");\n    }\n  };\n}\n\nexport default Client;\n","/**\n * @format\n */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport Autosuggest from \"react-autosuggest\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Table,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Auto suggestion handler\n */\n\nlet productList = [];\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst escapeRegexCharacters = (str) => {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\nconst getSuggestions = (value) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === \"\") {\n    return [];\n  }\n\n  const regex = new RegExp(\"^\" + escapedValue, \"i\");\n\n  return productList.filter((lan) => regex.test(lan.name));\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = (suggestion) => suggestion.name;\n\nclass Loss extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      suggestions: [],\n      loss: {\n        pid: \"\",\n        quantity: 0,\n        lossAmount: 0,\n        productLoss: true,\n      },\n      losses: [],\n    };\n  }\n\n  /**\n   * Autosuggession\n   */\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = (suggestion) => <span>{suggestion.name}</span>;\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleProductChanges = (event, val) => {\n    const data = val.suggestion;\n    this.state.value = val.suggestionValue;\n\n    this.state.loss.pid = data.p_id;\n    this.setState(this.state);\n  };\n\n  componentDidMount = () => {\n    this.reloadProductData();\n  };\n\n  reloadProductData = () => {\n    fetch(\"/api/product/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.err == \"no\") {\n          this.setState({ storageData: [...data.data] });\n          productList = [...data.data];\n        }\n      });\n\n    fetch(\"/api/operation/loss/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ losses: [...data] });\n      });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: \"Type a fish name\",\n      value,\n      onChange: this.onChange,\n    };\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Col md='8'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Add Loss</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <Autosuggest\n                        suggestions={suggestions}\n                        onSuggestionsFetchRequested={\n                          this.onSuggestionsFetchRequested\n                        }\n                        onSuggestionsClearRequested={\n                          this.onSuggestionsClearRequested\n                        }\n                        getSuggestionValue={getSuggestionValue}\n                        renderSuggestion={this.renderSuggestion}\n                        inputProps={inputProps}\n                        onSuggestionSelected={this.handleProductChanges}\n                      />\n                    </Col>\n                  </Row>\n                  <br />\n                  <Row>\n                    <Col className='pr-md-1' md='4'>\n                      <FormGroup>\n                        <label>Quantity</label>\n                        <Input\n                          placeholder='Quantity'\n                          value={this.state.loss.quantity}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.loss.quantity = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n\n                    <Col\n                      style={\n                        this.state.loss.productLoss\n                          ? { display: \"none\" }\n                          : { display: \"block\" }\n                      }\n                      className='pr-md-1'\n                      md='4'>\n                      <FormGroup>\n                        <label>Loss Amount</label>\n                        <Input\n                          placeholder='Amount'\n                          value={this.state.loss.lossAmount}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.loss.lossAmount = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n\n                    <Col className='pr-md-1' md='4'>\n                      <FormGroup>\n                        <label>Select One</label>\n                        <Input\n                          defaultValue='1'\n                          type='select'\n                          onChange={(event) => {\n                            let val = event.target.value;\n                            this.state.loss.productLoss =\n                              val == 1 ? true : false;\n                            this.setState(this.state);\n                          }}>\n                          <option value='1'>Product Loss</option>\n                          <option value='2'>Money returned</option>\n                        </Input>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    className='btn-fill'\n                    color='primary'\n                    type='button'\n                    onClick={() => this.SaveData()}>\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n\n          <Table className='tablesorter' responsive>\n            <thead className='text-primary'>\n              <tr>\n                <th>Time</th>\n                <th>Product</th>\n                <th>Quantity</th>\n                <th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.losses.map((loss) => {\n                return (\n                  <tr key={loss.lossId}>\n                    <td>{loss.time}</td>\n                    <td>\n                      {\" \"}\n                      <Link to={`/admin/single/${loss.pid}`}>Show</Link>\n                    </td>\n                    <td>{loss.quantity}</td>\n                    <td>{loss.amount}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </>\n    );\n  }\n\n  SaveData = () => {\n    if (this.state.loss.pid == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Select a valid product\",\n        icon: \"warning\",\n      });\n    } else if (\n      this.state.loss.quantity == 0 &&\n      this.state.loss.lossAmount == 0\n    ) {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid quantity number or loss amount\",\n        icon: \"warning\",\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/operation/loss\",\n        data: this.state.loss,\n      }).then(function (response) {\n        //handle success\n        if (response.status == 200) {\n          Swal.fire({\n            title: \"🐊🐊\",\n            text: \"Loss Added\",\n            icon: \"success\",\n            onClose: () => {\n              window.location.href = \"/admin/storage\";\n            },\n          });\n        }\n      });\n    }\n  };\n}\n\nexport default Loss;\n","/** @format */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Button,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\n\nclass singleTracnsection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bankCharge: 0,\n      dep: 0,\n      rent: 0,\n      utility: 0,\n      saving: 0,\n      extra: 0,\n      share: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    this.reloadData();\n  };\n\n  reloadData = () => {\n    fetch(\"/api/cost/get\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.clear();\n        console.log(data);\n        this.state = { ...data };\n        this.setState(this.state);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Col md='8'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Monthly Cost</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Bank Charge</label>\n                        <Input\n                          placeholder='Bank Charge'\n                          value={this.state.bankCharge}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.bankCharge = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Depriciation</label>\n                        <Input\n                          placeholder='Enter cost'\n                          value={this.state.dep}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.dep = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <br />\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Rent</label>\n                        <Input\n                          placeholder='Store Rent'\n                          value={this.state.rent}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.rent = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Utility</label>\n                        <Input\n                          placeholder='Enter cost'\n                          value={this.state.utility}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.utility = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>{\" \"}\n                  <br />\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Saving(%)</label>\n                        <Input\n                          placeholder='(0-100)%'\n                          value={this.state.saving}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.saving = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Extra</label>\n                        <Input\n                          placeholder='Enter cost'\n                          value={this.state.extra}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.extra = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <br />\n                  <Row>\n                    <Col className='pr-md-1' md='5'>\n                      <FormGroup>\n                        <label>Share(%)</label>\n                        <Input\n                          placeholder='Share %'\n                          value={this.state.share}\n                          type='number'\n                          onChange={(event) => {\n                            this.state.share = event.target.value;\n                            this.setState(this.state);\n                          }}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    className='btn-fill'\n                    color='primary'\n                    type='button'\n                    onClick={() => this.SaveData()}>\n                    Update\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n  SaveData = () => {\n    if (this.state.share > 100) {\n      Swal.fire(\"Oops!!\", \"Enter a valid share (%) percentage\", \"error\");\n    } else if (this.state.saving > 100) {\n      Swal.fire(\"Oops!!\", \"Enter a valid saving (%) percentage\", \"error\");\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/cost/update\",\n        data: this.state,\n      }).then((response) => {\n        //handle success\n        if (response.status == 200) {\n          Swal.fire({\n            title: \"🚧🚧\",\n            text: \"Updated Successfully\",\n            icon: \"success\",\n          });\n          this.reloadData();\n        }\n      });\n    }\n  };\n}\n\nexport default singleTracnsection;\n","/** @format */\n\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Button,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Form,\n} from \"reactstrap\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  PDFDownloadLink,\n} from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 15,\n    marginRight: 0,\n    flexGrow: 1,\n    textAlign: \"left\",\n    width: \"10%\",\n  },\n  col1: {\n    padding: \"5px\",\n    fontSize: \"10px\",\n    width: \"100%\",\n    marginBottom: \"1px\",\n    boxSizing: \"content-box\",\n    height: \"20px\",\n    padding: \"5px\",\n    border: \"1px solid white\",\n    backgroundColor: \"#7f8c8d\",\n  },\n  col2: {\n    padding: \"5px\",\n    fontSize: \"10px\",\n    width: \"100%\",\n    marginBottom: \"1px\",\n    boxSizing: \"content-box\",\n    height: \"20px\",\n    padding: \"5px\",\n    border: \"1px solid white\",\n    backgroundColor: \"#bdc3c7\",\n  },\n});\n\nclass singleTracnsection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.monthName = {\n      1: \"Jan\",\n      2: \"Feb\",\n      3: \"Mar\",\n      4: \"Apr\",\n      5: \"May\",\n      6: \"Jun\",\n      7: \"July\",\n      8: \"Aug\",\n      9: \"Sep\",\n      10: \"Oct\",\n      11: \"Nov\",\n      12: \"Dec\",\n    };\n    this.state = {\n      modalLarge: false,\n      modalDownload: false,\n      monthView: true,\n      cost: {\n        bankCharge: 0,\n        dep: 0,\n        rent: 0,\n        utility: 0,\n        saving: 0,\n        extra: 0,\n        share: 0,\n      },\n      month: \"Not Selected\",\n      year: \"Not Selected\",\n      tSells: 0,\n      tPurchase: 0,\n      tLoss: 0,\n      tCost: 0,\n      tProfit: 0,\n      tShare: 0,\n      mProfit: 0,\n      profit: 0,\n      netprofit: 0,\n      savingAmount: 0,\n      data: [],\n      index: -1,\n\n      daily: {\n        month: [],\n        days: [],\n        year: [],\n      },\n    };\n  }\n\n  componentDidMount = () => {\n    this.reloadData();\n  };\n  reloadData = () => {\n    fetch(\"/api/cost/get\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.state.cost = { ...data };\n        this.setState(this.state);\n        this.totalCost();\n      });\n\n    fetch(\"/api/operation/dateTime\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.state.data = [...data.trData];\n        this.setState(this.state);\n      });\n\n    // fetch(\"/api/operation/date/all\")\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     const dates = [...data.data];\n    //     dates.forEach((val) => {\n    //       if (!this.state.daily.year.includes(val._id.year)) {\n    //         this.state.daily.year.push(val._id.year);\n    //       }\n    //     });\n    //     this.state.data = [...data.trData];\n    //     this.setState(this.state);\n    //   });\n  };\n\n  monthView = () => {\n    return this.state.data.map((d, i) => {\n      return (\n        <option value={i}>\n          {d._id.month}, {d._id.year}\n        </option>\n      );\n    });\n  };\n\n  totalCost = () => {\n    const val =\n      +this.state.cost.bankCharge +\n      +this.state.cost.dep +\n      +this.state.cost.extra +\n      +this.state.cost.rent +\n      +this.state.cost.utility;\n    this.setState({ tCost: val });\n    return val;\n  };\n\n  navView = () => {\n    return (\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem active> Monthly</BreadcrumbItem>\n          <BreadcrumbItem\n            onClick={() => {\n              this.setState({ monthView: false });\n            }}>\n            Daily\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Breadcrumb>\n          <BreadcrumbItem\n            onClick={() => {\n              this.setState({ monthView: true });\n            }}>\n            Monthly\n          </BreadcrumbItem>\n          <BreadcrumbItem active> Daily</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    );\n  };\n  render() {\n    return (\n      <div className='content'>\n        {this.monthlyUI()}\n        <Modal\n          isOpen={this.state.modalLarge}\n          toggle={this.toggleModalLarge}\n          style={{ backgroundColor: \"transparent\" }}\n          size='lg'>\n          <ModalHeader\n            className='justify-content-center'\n            toggle={this.toggleModalLarge}>\n            PDF{\"  \"}\n            <i\n              className='tim-icons icon-cloud-download-93'\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                this.toggleModalDownload();\n              }}></i>\n          </ModalHeader>\n          <ModalBody style={{ background: \"transparent\" }}>\n            <div\n              style={{ height: \"100vh\", width: \"100%\", position: \"absolute\" }}>\n              <PDFViewer\n                style={{ height: \"100%\", width: \"100%\", position: \"absolute\" }}>\n                {this.MyDocument()}\n              </PDFViewer>\n            </div>\n          </ModalBody>\n        </Modal>\n        <Modal\n          className='lg'\n          isOpen={this.state.modalDownload}\n          toggle={() => {\n            this.toggleModalDownload();\n          }}>\n          <ModalBody style={{ backgroundColor: \"#3d3d3d\" }}>\n            {this.pdfDownloader()}\n          </ModalBody>\n          <ModalFooter style={{ backgroundColor: \"#3d3d3d\" }}>\n            <Button\n              color='secondary'\n              onClick={() => this.toggleModalDownload()}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n\n  toggleModalLarge = () => {\n    this.setState({\n      modalLarge: !this.state.modalLarge,\n    });\n  };\n  toggleModalDownload = () => {\n    this.setState({\n      modalDownload: !this.state.modalDownload,\n    });\n  };\n  pdfDownloader = () => {\n    return (\n      <div>\n        <PDFDownloadLink\n          document={this.MyDocument()}\n          fileName={`DailyReport-${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()}_${Date.now()}.pdf`}>\n          {({ blob, url, loading, error }) =>\n            loading ? \"Loading document...\" : \"Download now!\"\n          }\n        </PDFDownloadLink>\n      </div>\n    );\n  };\n\n  handleMonthCange = (event) => {\n    this.setState({ index: event.target.value });\n    const val = this.state.data[event.target.value];\n    const tLoss = val.losses.length > 0 ? val.losses[0].loss : 0;\n    const profit = val.sell - (+val.purchase + +tLoss);\n    const savingA =\n      (profit - this.state.tCost) * (this.state.cost.saving / 100);\n    const share =\n      ((profit - this.state.tCost - savingA) * this.state.cost.share) / 100;\n\n    this.state.tProfit = profit;\n    this.state.tSells = val.sell;\n    this.state.tPurchase = val.purchase;\n    this.state.tLoss = tLoss;\n    this.state.mProfit = profit - this.state.tCost;\n\n    this.state.profit = profit - this.state.tCost - savingA;\n    this.state.tShare = share;\n    this.state.netprofit = profit - this.state.tCost - savingA - share;\n    this.state.savingAmount = savingA;\n\n    this.setState({ month: this.monthName[val._id.month], year: val._id.year });\n  };\n\n  MyDocument = () => {\n    return (\n      <Document>\n        <Page size='A4' style={styles.page}>\n          <View style={styles.section}>\n            <Text\n              style={{\n                fontSize: \"30px\",\n                padding: \"10px\",\n                marginBottom: \"10px\",\n              }}>\n              SellFish\n            </Text>\n            <Text\n              style={{\n                fontSize: \"10px\",\n                padding: \"5px\",\n                marginBottom: \"1px\",\n              }}>\n              Monthly Report: {this.state.month}, {this.state.year}\n            </Text>\n            <Text\n              style={{\n                fontSize: \"10px\",\n                padding: \"5px\",\n                marginBottom: \"10px\",\n              }}>\n              Generated Date: {new Date().getDate()}/{new Date().getMonth()}/\n              {new Date().getFullYear()} - {\"Time:\"}\n              {new Date().toLocaleString(\"en-US\", {\n                hour: \"numeric\",\n                minute: \"numeric\",\n                hour12: true,\n              })}\n            </Text>\n            <Text style={{ backgroundColor: \"#8e44ad\", color: \"white\" }}>\n              Report\n            </Text>\n            <Text style={styles.col1}>Sells</Text>\n            <Text style={styles.col1}>Purchases</Text>\n            <Text style={styles.col1}>Losses</Text>\n            <Text style={styles.col1}>Profit From Sell</Text>\n            <Text style={styles.col1}>Rent</Text>\n            <Text style={styles.col1}>Utility</Text>\n            <Text style={styles.col1}>Extra</Text>\n            <Text style={styles.col1}>Savings ({this.state.cost.saving}%)</Text>\n            <Text style={styles.col1}>Profit</Text>\n            <Text style={{ ...styles.col1, color: \"#3d3d3d\" }}>\n              Total Profit\n            </Text>\n            <Text style={{ ...styles.col1, color: \"#227093\" }}>\n              Share ({this.state.cost.share}%)\n            </Text>\n            <Text\n              style={{ ...styles.col1, color: \"#474787\", fontWeight: \"bold\" }}>\n              Net Profit\n            </Text>\n          </View>\n          <View\n            style={{\n              marginTop: 3,\n              marginRight: 15,\n              padding: 0,\n              flexGrow: 1,\n              textAlign: \"left\",\n            }}>\n            <Text\n              style={{\n                fontSize: \"30px\",\n                padding: \"10px\",\n                marginBottom: \"10px\",\n              }}>\n              {\" \"}\n            </Text>\n            <Text\n              style={{ fontSize: \"10px\", padding: \"5px\", marginBottom: \"1px\" }}>\n              {\" \"}\n            </Text>\n            <Text\n              style={{\n                fontSize: \"10px\",\n                padding: \"5px\",\n                marginBottom: \"10px\",\n              }}>\n              {\" \"}\n            </Text>\n            <Text style={{ fontSize: \"20px\", padding: \"5px\" }}> </Text>\n\n            <Text style={styles.col2}>{this.state.tSells}</Text>\n            <Text style={styles.col2}>{this.state.tPurchase}</Text>\n            <Text style={styles.col2}>{this.state.tLoss}</Text>\n            <Text style={styles.col2}>{this.state.tProfit}</Text>\n            <Text style={styles.col2}>{this.state.cost.rent}</Text>\n            <Text style={styles.col2}>{this.state.cost.utility}</Text>\n            <Text style={styles.col2}>{this.state.cost.extra}</Text>\n            <Text style={styles.col2}>{this.state.savingAmount}</Text>\n            <Text style={styles.col2}>-</Text>\n            <Text style={{ ...styles.col2, color: \"#3d3d3d\" }}>\n              {this.state.profit}\n            </Text>\n            <Text style={{ ...styles.col2, color: \"#227093\" }}>\n              {this.state.tShare}\n            </Text>\n            <Text style={{ ...styles.col2, color: \"#474787\" }}>\n              {this.state.netprofit}\n            </Text>\n          </View>\n        </Page>\n      </Document>\n    );\n  };\n\n  monthlyUI = () => {\n    return (\n      <Card className='text-white'>\n        <CardHeader>Monthly Report </CardHeader>\n        <CardBody>\n          <CardTitle>\n            <Row>\n              <Col className='pr-md-6'>\n                (Month: {this.state.month} Year: {this.state.year} ){\" \"}\n              </Col>\n              <Col className='pr-md-6'>\n                <Input\n                  type='select'\n                  value={this.state.index}\n                  onChange={this.handleMonthCange}>\n                  <option value='-1' disabled>\n                    Select One\n                  </option>\n                  {this.state.data.map((d, i) => {\n                    return (\n                      <option value={i}>\n                        {this.monthName[d._id.month]}, {d._id.year}\n                      </option>\n                    );\n                  })}\n                </Input>{\" \"}\n              </Col>\n            </Row>\n          </CardTitle>\n\n          <Row>\n            <Col className='pr-md-6'>Sells :</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}> {this.state.tSells} </b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Purchases:</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.tPurchase}</b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Loss</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.tLoss}</b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Profit from sell</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.tProfit}</b>\n            </Col>\n          </Row>\n\n          <Card color='primary'>\n            <CardBody>\n              <h6 style={{ textAlign: \"center\" }}>Extra Cost</h6>\n            </CardBody>\n          </Card>\n\n          <Row>\n            <Col className='pr-md-6'>Rent</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.cost.rent}</b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Utility</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.cost.utility}</b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Extra</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.cost.extra}</b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Saving ({this.state.cost.saving}%)</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.savingAmount}</b>\n            </Col>\n          </Row>\n\n          <Card color='info'>\n            <CardBody>\n              <h6 style={{ textAlign: \"center\" }}>Profit</h6>\n            </CardBody>\n          </Card>\n\n          <Row>\n            <Col className='pr-md-6'>Total Profit</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.profit}</b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Share ({this.state.cost.share}%) </Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}> {this.state.tShare} </b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className='pr-md-6'>Net Profit</Col>\n            <Col className='pr-md-6'>\n              <b style={{ textAlign: \"right\" }}>{this.state.netprofit}</b>\n            </Col>\n          </Row>\n\n          <Row>\n            <Button\n              className='btn-round'\n              color='primary'\n              style={\n                this.state.index != -1\n                  ? { display: \"block\" }\n                  : { display: \"none\" }\n              }\n              onClick={() => {\n                this.toggleModalLarge();\n              }}>\n              <i className='tim-icons icon-paper' /> Generate PDF\n            </Button>\n          </Row>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default singleTracnsection;\n","/**\n * /*!\n *\n * =========================================================\n * Black Dashboard React v1.1.0\n * =========================================================\n *\n * Product Page: https://www.creative-tim.com/product/black-dashboard-react\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n *\n * Coded by Creative Tim\n *\n * =========================================================\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * @format\n */\n\nimport Dashboard from \"views/Dashboard.js\";\n// import Icons from \"views/Icons.js\";\n// import Map from \"views/Map.js\";\n// import Notifications from \"views/Notifications.js\";\n// import Rtl from \"views/Rtl.js\";\n// import TableList from \"views/TableList.js\";\n// import Typography from \"views/Typography.js\";\n// import UserProfile from \"views/UserProfile.js\";\nimport Sell from \"views/sells/Sell.js\";\nimport Purchase from \"views/purchases/Purchase.js\";\nimport Storage from \"./views/storages/Storage.js\";\nimport Client from \"./views/clients/Client.js\";\nimport Expense from \"./views/expenses/Expense.js\";\nimport Transection from \"./views/transections/trans.js\";\nimport SingleExpense from \"./views/expenses/singleExpense.js\";\nimport Loss from \"./views/loss/loss.js\";\nimport Cost from \"./views/dashboard/cost.js\";\nimport Report from \"./views/report/report.js\";\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/report\",\n    name: \"Report\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-bar-32\",\n    component: Report,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/cost\",\n    name: \"Monthly Cost Data\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-coins\",\n    component: Cost,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/transection\",\n    name: \"Transections\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-money-coins\",\n    component: Transection,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/sell\",\n    name: \"Sell Product\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-basket-simple\",\n    component: Sell,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/purchase\",\n    name: \"Purchase Product\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-cart\",\n    component: Purchase,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/storage\",\n    name: \"Storage data\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-bag-16\",\n    component: Storage,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/client\",\n    name: \"Client data\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-satisfied\",\n    component: Client,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/expense\",\n    name: \"Expense data\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-bus-front-12\",\n    component: Expense,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/loss\",\n    name: \"Add Loss\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-trash-simple\",\n    component: Loss,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   rtlName: \"الرموز\",\n  //   icon: \"tim-icons icon-atom\",\n  //   component: Icons,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/map\",\n  //   name: \"Map\",\n  //   rtlName: \"خرائط\",\n  //   icon: \"tim-icons icon-pin\",\n  //   component: Map,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   rtlName: \"إخطارات\",\n  //   icon: \"tim-icons icon-bell-55\",\n  //   component: Notifications,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"User Profile\",\n  //   rtlName: \"ملف تعريفي للمستخدم\",\n  //   icon: \"tim-icons icon-single-02\",\n  //   component: UserProfile,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Table List\",\n  //   rtlName: \"قائمة الجدول\",\n  //   icon: \"tim-icons icon-puzzle-10\",\n  //   component: TableList,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   rtlName: \"طباعة\",\n  //   icon: \"tim-icons icon-align-center\",\n  //   component: Typography,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/rtl-support\",\n  //   name: \"RTL Support\",\n  //   rtlName: \"ار تي ال\",\n  //   icon: \"tim-icons icon-world\",\n  //   component: Rtl,\n  //   layout: \"/rtl\"\n  // }\n];\nexport default routes;\n","/** @format */\n\nimport React from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass addClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      client: {\n        name: \"\",\n        email: \"\",\n        pn: \"\",\n        address: \"\",\n        city: \"\",\n        zip: \"\",\n      },\n      cid: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <div className='content'>\n          <Row>\n            <Col md='8'>\n              <Card>\n                <CardHeader>\n                  <h5 className='title'>Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <fieldset\n                      style={{\n                        border: \"1px solid \",\n                        padding: \"10px\",\n                        borderRadius: \"5px\",\n                      }}>\n                      <legend style={{ fontSize: \"medium\" }}>\n                        Client Information\n                      </legend>\n                      <Row>\n                        <Col className='pr-md-1' md='5'>\n                          <FormGroup>\n                            <label>Client Name</label>\n                            <Input\n                              placeholder='Enter Full Name'\n                              type='text'\n                              value={this.state.client.name}\n                              onChange={(event) => {\n                                this.state.client.name = event.target.value;\n                                this.setState(this.state);\n                              }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col className='pl-md-1' md='5'>\n                          <FormGroup>\n                            <label htmlFor='exampleInputEmail1'>\n                              Email address\n                            </label>\n                            <Input\n                              placeholder='mike@email.com'\n                              type='email'\n                              value={this.state.client.email}\n                              onChange={(event) => {\n                                this.state.client.email = event.target.value;\n                                this.setState(this.state);\n                              }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col className='pl-ml-1' md='10'>\n                          <FormGroup>\n                            <label htmlFor='exampleInputEmail1'>\n                              Phone Number\n                            </label>\n                            <Input\n                              placeholder='Enter Phone Number'\n                              value={this.state.client.pn}\n                              onChange={(event) => {\n                                this.state.client.pn = event.target.value;\n                                this.setState(this.state);\n                              }}\n                              type='text'\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col md='12'>\n                          <FormGroup>\n                            <label>Address</label>\n                            <Input\n                              placeholder='Home Address'\n                              type='text'\n                              value={this.state.client.address}\n                              onChange={(event) => {\n                                this.state.client.address = event.target.value;\n                                this.setState(this.state);\n                              }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col className='pr-md-1' md='4'>\n                          <FormGroup>\n                            <label>City</label>\n                            <Input\n                              placeholder='City'\n                              type='text'\n                              value={this.state.client.city}\n                              onChange={(event) => {\n                                this.state.client.city = event.target.value;\n                                this.setState(this.state);\n                              }}\n                            />\n                          </FormGroup>\n                        </Col>\n\n                        <Col className='pl-md-1' md='4'>\n                          <FormGroup>\n                            <label>Postal Code</label>\n                            <Input\n                              placeholder='ZIP Code'\n                              type='number'\n                              value={this.state.client.zip}\n                              onChange={(event) => {\n                                this.state.client.zip = event.target.value;\n                                this.setState(this.state);\n                              }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </fieldset>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    className='btn-fill'\n                    color='primary'\n                    type='button'\n                    onClick={() => this.SaveData()}>\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n\n  SaveData = () => {\n    if (this.state.client.name == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid name\",\n        icon: \"warning\",\n      });\n    } else if (this.state.client.email == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid email\",\n        icon: \"warning\",\n      });\n    } else if (this.state.client.pn == \"\" || this.state.client.pn.length < 11) {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid Phone Number\",\n        icon: \"warning\",\n      });\n    } else if (this.state.client.address == \"\") {\n      Swal.fire({\n        title: \"🐠\",\n        text: \"Enter a valid Address\",\n        icon: \"warning\",\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: \"/api/client/add\",\n        data: this.state.client,\n      }).then((response) => {\n        console.clear();\n        console.log(response);\n        //handle success\n        if (response.status == 200) {\n          Swal.fire({\n            title: \"🐬🐬\",\n            text: \"Client Addes\",\n            icon: \"success\",\n          }).then(() => {\n            window.location.href = \"/admin/client\";\n          });\n        }\n      });\n    }\n  };\n}\n\nexport default addClient;\n","/**\n * /*!\n *\n * =========================================================\n * Black Dashboard React v1.1.0\n * =========================================================\n *\n * Product Page: https://www.creative-tim.com/product/black-dashboard-react\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n *\n * Coded by Creative Tim\n *\n * =========================================================\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * @format\n */\n\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\nimport SingleExpense from \"../../views/expenses/singleExpense.js\";\nimport addStorage from \"../../views/storages/addStorage.js\";\nimport singleStorage from \"../../views/storages/singleStorage.js\";\nimport singleClient from \"../../views/clients/singleClient.js\";\nimport pdfComponent from \"../../views/pdf.js\";\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/SellFish.png\";\nimport addClient from \"../../views/clients/addclient.js\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1,\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n            exact\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className='wrapper'>\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"https://www.creative-tim.com/\",\n              text: \"Inventory\",\n              imgSrc: logo,\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className='main-panel'\n            ref='mainPanel'\n            data={this.state.backgroundColor}>\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              <Route\n                path='/admin/exp/:id'\n                component={SingleExpense}\n                key={123}\n                exact\n              />\n              <Route\n                path='/admin/addstorage'\n                component={addStorage}\n                key={124}\n                exact\n              />\n              <Route\n                path='/admin/single/:id'\n                component={singleStorage}\n                key={125}\n                exact\n              />\n              <Route\n                path='/admin/client/addclient'\n                component={addClient}\n                key={126}\n                exact\n              />\n              <Route\n                path='/admin/client/:id'\n                component={singleClient}\n                key={127}\n                exact\n              />\n\n              <Route\n                path='/admin/pdf/:tid'\n                component={pdfComponent}\n                key={128}\n                exact\n              />\n              <Redirect from='*' to='/admin/dashboard' />\n            </Switch>\n            {\n              // we don't want the Footer to be rendered on map page\n              this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n                <Footer fluid />\n              )\n            }\n          </div>\n        </div>\n        <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"mr-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                  >\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\n                    <i className=\"tim-icons icon-sound-wave\" />\n                    <p className=\"d-lg-none\">Notifications</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" tag=\"ul\" right>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Mike John responded to your email\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        You have 5 more tasks\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Your friend Michael is in town\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Another notification\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Another one\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport RTLNavbar from \"components/Navbars/RTLNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // on this page, we need on the body tag the classes .rtl and .menu-on-right\n    document.body.classList.add(\"rtl\", \"menu-on-right\");\n    // we also need the rtl bootstrap\n    // so we add it dynamically to the head\n    let head = document.head;\n    let link = document.createElement(\"link\");\n    link.type = \"text/css\";\n    link.rel = \"stylesheet\";\n    link.id = \"rtl-id\";\n    link.href =\n      \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-rtl/3.4.0/css/bootstrap-rtl.css\";\n    head.appendChild(link);\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n    // when we exit this page, we need to delete the classes .rtl and .menu-on-right\n    // from the body tag\n    document.body.classList.remove(\"rtl\", \"menu-on-right\");\n    // we also need to delete the rtl bootstrap, so it does not break the other pages\n    // that do not make use of rtl\n    document.getElementById(\"rtl-id\").remove();\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/rtl\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].rtlName || routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            rtlActive\n            logo={{\n              outterLink: \"https://www.creative-tim.com/\",\n              text: \"الإبداعية تيم\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <RTLNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>{this.getRoutes(routes)}</Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n        <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/**\n * /*!\n *\n * =========================================================\n * Black Dashboard React v1.1.0\n * =========================================================\n *\n * Product Page: https://www.creative-tim.com/product/black-dashboard-react\n * Copyright 2020 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n *\n * Coded by Creative Tim\n *\n * =========================================================\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * @format\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport pdfComponent from \"views/pdf.js\";\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport RTLLayout from \"layouts/RTL/RTL.js\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nconst apiLink = \"http://localhost:7777\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path='/admin' render={(props) => <AdminLayout {...props} />} />\n      <Route exact path='/pdf/:tid' component={pdfComponent} />\n      <Route exact path='/rtl' render={(props) => <RTLLayout {...props} />} />\n      <Redirect from='/' to='/admin/dashboard' />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}